{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { savePitData, savePitScanned } from \"../logic/PitLogic\";\nimport { initialPitData, DriveBaseType, DriveBaseMotor, Gravity, HumanPlayerSpotlight, PickupSpots, ScoreSpots, ShootSpots, WellMade, Stability, Years } from \"../Models/PitModel\";\nimport { DropDownSelector, ToggleSwitch, InputField, SaveButton } from \"./ReusableStuff\";\nimport { loadPitData } from \"../logic/PitLogic\";\nimport { validateEmptyField } from \"../logic/ValidationLogic\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Pits(_ref) {\n  var route = _ref.route;\n  var currentTeamNumber = route.params.currentTeamNumber;\n  var _useState = useState(initialPitData),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPitData = _useState2[0],\n    setNewPitData = _useState2[1];\n  useEffect(function () {\n    var loadPitDataOnMount = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var loadedPitData = yield loadPitData(currentTeamNumber);\n        setNewPitData(loadedPitData);\n        setField(\"TeamNb\", currentTeamNumber);\n        if (loadedPitData === null) {\n          setNewPitData(initialPitData);\n        }\n      });\n      return function loadPitDataOnMount() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadPitDataOnMount();\n  }, [currentTeamNumber]);\n  var setField = function setField(field, value) {\n    setNewPitData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var setNumericField = function setNumericField(field, value) {\n    var numericValue = value === \"\" ? \"\" : parseInt(value, 10);\n    setNewPitData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, numericValue));\n    });\n  };\n  var setEnumField = function setEnumField(field, value) {\n    setNewPitData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var setBooleanField = function setBooleanField(field, value) {\n    setNewPitData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleSavePitData = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var validationFields = [{\n          field: \"Robot Scout\",\n          value: newPitData.ScoutName\n        }];\n        var validationResults = yield Promise.all(validationFields.map(function () {\n          var _ref5 = _asyncToGenerator(function* (_ref4) {\n            var field = _ref4.field,\n              value = _ref4.value;\n            return _objectSpread({\n              field: field\n            }, yield validateEmptyField(field, value));\n          });\n          return function (_x) {\n            return _ref5.apply(this, arguments);\n          };\n        }()));\n        var failedValidation = validationResults.find(function (result) {\n          return !result.isValid;\n        });\n        if (failedValidation) {\n          alert(failedValidation.errorMessage);\n        } else {\n          yield savePitData(newPitData, currentTeamNumber);\n        }\n      } catch (validationFailed) {\n        console.error(validationFailed);\n      }\n    });\n    return function handleSavePitData() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  function generateEnumItems(enumObject) {\n    return Object.keys(enumObject).map(function (key) {\n      return {\n        label: enumObject[key],\n        value: enumObject[key]\n      };\n    });\n  }\n  var driveBaseTypeItems = generateEnumItems(DriveBaseType);\n  var driveBaseMotorItems = generateEnumItems(DriveBaseMotor);\n  var years = generateEnumItems(Years);\n  var stabilityItems = generateEnumItems(Stability);\n  var wellMadeItems = generateEnumItems(WellMade);\n  var pickupSpotsItems = generateEnumItems(PickupSpots);\n  var scoreSpotsItems = generateEnumItems(ScoreSpots);\n  var gravityItems = generateEnumItems(Gravity);\n  var shootSpotsItems = generateEnumItems(ShootSpots);\n  var humanPlayerSpotlightItems = generateEnumItems(HumanPlayerSpotlight);\n  var handleScroll = function handleScroll() {\n    Keyboard.dismiss();\n  };\n  var data = [{\n    label: \"Team Name\",\n    key: \"TeamName\",\n    value: newPitData.TeamName,\n    type: \"text\"\n  }, {\n    label: \"Drivebase Type\",\n    key: \"DriveBaseType\",\n    value: newPitData.DriveBaseType,\n    type: \"dropdown\",\n    droptype: driveBaseTypeItems\n  }, {\n    label: \"Drivebase Motor\",\n    key: \"DriveBaseMotor\",\n    value: newPitData.DriveBaseMotor,\n    type: \"dropdown\",\n    droptype: driveBaseMotorItems\n  }, {\n    label: \"Drivebase Experience\",\n    key: \"DriverExperience\",\n    value: newPitData.DriverExperience,\n    type: \"dropdown\",\n    droptype: years\n  }, {\n    label: \"Robot Weight (lbs)\",\n    key: \"WeightLbs\",\n    value: newPitData.WeightLbs.toString(),\n    type: \"number\"\n  }, {\n    label: \"Robot Width (in)\",\n    key: \"WidthInches\",\n    value: newPitData.WidthInches.toString(),\n    type: \"number\"\n  }, {\n    label: \"Robot Length (in)\",\n    key: \"LengthInches\",\n    value: newPitData.LengthInches.toString(),\n    type: \"number\"\n  }, {\n    label: \"Height (in)\",\n    key: \"HeightInches\",\n    value: newPitData.HeightInches.toString(),\n    type: \"number\"\n  }, {\n    label: \"Frame Clearance (in)\",\n    key: \"FrameClearanceInches\",\n    value: newPitData.FrameClearanceInches.toString(),\n    type: \"number\"\n  }, {\n    label: \"Stability\",\n    key: \"Stability\",\n    value: newPitData.Stability,\n    type: \"dropdown\",\n    droptype: stabilityItems\n  }, {\n    label: \"Well Made\",\n    key: \"WellMade\",\n    value: newPitData.WellMade,\n    type: \"dropdown\",\n    droptype: wellMadeItems\n  }, {\n    label: \"Single Intake Shooter\",\n    key: \"SingleIntakeShooter\",\n    value: newPitData.SingleIntakeShooter,\n    type: \"boolean\"\n  }, {\n    label: \"Pickup Spots\",\n    key: \"PickupSpots\",\n    value: newPitData.PickupSpots,\n    type: \"dropdown\",\n    droptype: pickupSpotsItems\n  }, {\n    label: \"Score Spots\",\n    key: \"ScoreSpots\",\n    value: newPitData.ScoreSpots,\n    type: \"dropdown\",\n    droptype: scoreSpotsItems\n  }, {\n    label: \"Center of Gravity\",\n    key: \"CenterOfGravity\",\n    value: newPitData.CenterOfGravity,\n    type: \"dropdown\",\n    droptype: gravityItems\n  }, {\n    label: \"Years Using Swerve\",\n    key: \"YearsUsingSwerve\",\n    value: newPitData.YearsUsingSwerve,\n    type: \"dropdown\",\n    droptype: years\n  }, {\n    label: \"Shoots From\",\n    key: \"ShootsFrom\",\n    value: newPitData.ShootsFrom,\n    type: \"dropdown\",\n    droptype: shootSpotsItems\n  }, {\n    label: \"Object Recognition\",\n    key: \"ObjectRecognition\",\n    value: newPitData.ObjectRecognition,\n    type: \"boolean\"\n  }, {\n    label: \"Read April Tags\",\n    key: \"ReadAprilTags\",\n    value: newPitData.ReadAprilTags,\n    type: \"boolean\"\n  }, {\n    label: \"Autonomous Program to leave\",\n    key: \"AutonomousProgram\",\n    value: newPitData.AutonomousProgram,\n    type: \"boolean\"\n  }, {\n    label: \"Can Get on Stage\",\n    key: \"CanGetOnStage\",\n    value: newPitData.CanGetOnStage,\n    type: \"boolean\"\n  }, {\n    label: \"Can Score Notes in Trap\",\n    key: \"CanScoreNotesInTrap\",\n    value: newPitData.CanScoreNotesInTrap,\n    type: \"boolean\"\n  }, {\n    label: \"Human Player Spotlight\",\n    key: \"HumanPlayerSpotlight\",\n    value: newPitData.HumanPlayerSpotlight,\n    type: \"dropdown\",\n    droptype: humanPlayerSpotlightItems\n  }, {\n    label: \"Can Cheesecake or lift robot\",\n    key: \"CheesecakeAbility\",\n    value: newPitData.CheesecakeAbility,\n    type: \"boolean\"\n  }, {\n    label: \"Comments\",\n    key: \"Comments\",\n    value: newPitData.Comments,\n    type: \"text\"\n  }];\n  return _jsx(View, {\n    style: styles.container,\n    onStartShouldSetResponderCapture: handleScroll,\n    children: _jsxs(KeyboardAvoidingView, {\n      behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n      style: {\n        flex: 1\n      },\n      keyboardVerticalOffset: Platform.OS === \"ios\" ? 90 : 90,\n      children: [_jsx(View, {\n        style: styles.headerContainer,\n        children: _jsxs(Text, {\n          style: styles.headerText,\n          children: [\"Pit Scouting for Team \", currentTeamNumber]\n        })\n      }), _jsx(FlatList, {\n        scrollEnabled: true,\n        style: styles.container,\n        data: data,\n        keyExtractor: function keyExtractor(item) {\n          return item.key;\n        },\n        renderItem: function renderItem(_ref6) {\n          var item = _ref6.item;\n          return _jsxs(View, {\n            children: [item.type === \"text\" && _jsx(InputField, {\n              label: item.label,\n              value: item.value,\n              onChange: function onChange(text) {\n                return setField(item.key, text);\n              },\n              keyboardType: \"default\"\n            }), item.type === \"number\" && _jsx(InputField, {\n              label: item.label,\n              value: item.value.toString(),\n              onChange: function onChange(text) {\n                return setNumericField(item.key, text);\n              },\n              keyboardType: \"numeric\"\n            }), item.type === \"boolean\" && _jsx(ToggleSwitch, {\n              label: item.label,\n              value: item.value,\n              onToggle: function onToggle(newValue) {\n                return setBooleanField(item.key, newValue);\n              }\n            }), item.type === \"dropdown\" && _jsx(DropDownSelector, {\n              label: item.label,\n              value: item.value,\n              items: item.droptype,\n              setValue: function setValue(text) {\n                return setEnumField(item.key, text);\n              }\n            }), item.type === \"timer\" && _jsx(Timer, {\n              setValue: function setValue(text) {\n                return setArrayField(item.key, text);\n              },\n              dropPiece: function dropPiece() {\n                return setNumericField(\"DroppedGamePiece\", newMatchData.DroppedGamePiece + 1);\n              }\n            }), item.type === \"grid\" && _jsx(Grid, {\n              rows: 3,\n              columns: 3\n            }), item.type === \"custom\" && _jsx(CustomComponent, {})]\n          });\n        }\n      }), _jsx(SaveButton, {\n        save: handleSavePitData\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  headerContainer: {\n    alignItems: \"center\",\n    marginVertical: 10\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  saveButton: {\n    backgroundColor: \"#F6EB14\",\n    borderRadius: 10,\n    padding: 15,\n    alignItems: \"center\"\n  }\n});\nexport default Pits;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","FlatList","Switch","Platform","Keyboard","KeyboardAvoidingView","savePitData","savePitScanned","initialPitData","DriveBaseType","DriveBaseMotor","Gravity","HumanPlayerSpotlight","PickupSpots","ScoreSpots","ShootSpots","WellMade","Stability","Years","DropDownSelector","ToggleSwitch","InputField","SaveButton","loadPitData","validateEmptyField","jsxs","_jsxs","jsx","_jsx","Pits","_ref","route","currentTeamNumber","params","_useState","_useState2","_slicedToArray","newPitData","setNewPitData","loadPitDataOnMount","_ref2","_asyncToGenerator","loadedPitData","setField","apply","arguments","field","value","prevData","_objectSpread","_defineProperty","setNumericField","numericValue","parseInt","setEnumField","setBooleanField","handleSavePitData","_ref3","validationFields","ScoutName","validationResults","Promise","all","map","_ref5","_ref4","_x","failedValidation","find","result","isValid","alert","errorMessage","validationFailed","console","error","generateEnumItems","enumObject","Object","keys","key","label","driveBaseTypeItems","driveBaseMotorItems","years","stabilityItems","wellMadeItems","pickupSpotsItems","scoreSpotsItems","gravityItems","shootSpotsItems","humanPlayerSpotlightItems","handleScroll","dismiss","data","TeamName","type","droptype","DriverExperience","WeightLbs","toString","WidthInches","LengthInches","HeightInches","FrameClearanceInches","SingleIntakeShooter","CenterOfGravity","YearsUsingSwerve","ShootsFrom","ObjectRecognition","ReadAprilTags","AutonomousProgram","CanGetOnStage","CanScoreNotesInTrap","CheesecakeAbility","Comments","style","styles","container","onStartShouldSetResponderCapture","children","behavior","OS","flex","keyboardVerticalOffset","headerContainer","headerText","scrollEnabled","keyExtractor","item","renderItem","_ref6","onChange","text","keyboardType","onToggle","newValue","items","setValue","Timer","setArrayField","dropPiece","newMatchData","DroppedGamePiece","Grid","rows","columns","CustomComponent","save","create","alignItems","marginVertical","fontSize","fontWeight","saveButton","backgroundColor","borderRadius","padding"],"sources":["C:/Users/Noril/Documents/TechScout/screens/Pits.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  FlatList,\r\n  Switch,\r\n  Platform,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\nimport { savePitData, savePitScanned } from \"../logic/PitLogic\";\r\nimport {\r\n  initialPitData,\r\n  DriveBaseType,\r\n  DriveBaseMotor,\r\n  Gravity,\r\n  HumanPlayerSpotlight,\r\n  PickupSpots,\r\n  ScoreSpots,\r\n  ShootSpots,\r\n  WellMade,\r\n  Stability,\r\n  Years,\r\n} from \"../Models/PitModel\";\r\nimport {\r\n  DropDownSelector,\r\n  ToggleSwitch,\r\n  InputField,\r\n  SaveButton,\r\n} from \"./ReusableStuff\";\r\nimport { loadPitData } from \"../logic/PitLogic\";\r\nimport { validateEmptyField } from \"../logic/ValidationLogic\";\r\n\r\nfunction Pits({ route }) {\r\n  const { currentTeamNumber } = route.params;\r\n  const [newPitData, setNewPitData] = useState(initialPitData);\r\n\r\n  useEffect(() => {\r\n    const loadPitDataOnMount = async () => {\r\n      const loadedPitData = await loadPitData(currentTeamNumber);\r\n      setNewPitData(loadedPitData);\r\n      setField(\"TeamNb\", currentTeamNumber);\r\n      if (loadedPitData === null) {\r\n        setNewPitData(initialPitData);\r\n      }\r\n    };\r\n\r\n    loadPitDataOnMount();\r\n  }, [currentTeamNumber]);\r\n\r\n  const setField = (field, value) => {\r\n    setNewPitData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const setNumericField = (field, value) => {\r\n    const numericValue = value === \"\" ? \"\" : parseInt(value, 10);\r\n\r\n    setNewPitData((prevData) => ({\r\n      ...prevData,\r\n      [field]: numericValue,\r\n    }));\r\n  };\r\n\r\n  const setEnumField = (field, value) => {\r\n    setNewPitData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const setBooleanField = (field, value) => {\r\n    setNewPitData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSavePitData = async () => {\r\n    try {\r\n      const validationFields = [\r\n        { field: \"Robot Scout\", value: newPitData.ScoutName },\r\n        \r\n      ];\r\n\r\n      const validationResults = await Promise.all(\r\n        validationFields.map(async ({ field, value }) => {\r\n          return { field, ...(await validateEmptyField(field, value)) };\r\n        })\r\n      );\r\n\r\n      const failedValidation = validationResults.find(\r\n        (result) => !result.isValid\r\n      );\r\n\r\n      if (failedValidation) {\r\n        alert(failedValidation.errorMessage);\r\n      } else {\r\n        await savePitData(newPitData, currentTeamNumber);\r\n      }\r\n    } catch (validationFailed) {\r\n      console.error(validationFailed);\r\n    }\r\n  };\r\n\r\n  function generateEnumItems(enumObject) {\r\n    return Object.keys(enumObject).map((key) => ({\r\n      label: enumObject[key],\r\n      value: enumObject[key],\r\n    }));\r\n  }\r\n\r\n  const driveBaseTypeItems = generateEnumItems(DriveBaseType);\r\n  const driveBaseMotorItems = generateEnumItems(DriveBaseMotor);\r\n  const years = generateEnumItems(Years);\r\n  const stabilityItems = generateEnumItems(Stability);\r\n  const wellMadeItems = generateEnumItems(WellMade);\r\n  const pickupSpotsItems = generateEnumItems(PickupSpots);\r\n  const scoreSpotsItems = generateEnumItems(ScoreSpots);\r\n  const gravityItems = generateEnumItems(Gravity);\r\n  const shootSpotsItems = generateEnumItems(ShootSpots);\r\n  const humanPlayerSpotlightItems = generateEnumItems(HumanPlayerSpotlight);\r\n\r\n  const handleScroll = () => {\r\n    Keyboard.dismiss();\r\n  };\r\n\r\n  // FlatList data\r\n  const data = [\r\n    {\r\n      label: \"Team Name\",\r\n      key: \"TeamName\",\r\n      value: newPitData.TeamName,\r\n      type: \"text\",\r\n    },\r\n    {\r\n      label: \"Drivebase Type\",\r\n      key: \"DriveBaseType\",\r\n      value: newPitData.DriveBaseType,\r\n      type: \"dropdown\",\r\n      droptype: driveBaseTypeItems,\r\n    },\r\n    {\r\n      label: \"Drivebase Motor\",\r\n      key: \"DriveBaseMotor\",\r\n      value: newPitData.DriveBaseMotor,\r\n      type: \"dropdown\",\r\n      droptype: driveBaseMotorItems,\r\n    },\r\n    {\r\n      label: \"Drivebase Experience\",\r\n      key: \"DriverExperience\",\r\n      value: newPitData.DriverExperience,\r\n      type: \"dropdown\",\r\n      droptype: years,\r\n    },\r\n    {\r\n      label: \"Robot Weight (lbs)\",\r\n      key: \"WeightLbs\",\r\n      value: newPitData.WeightLbs.toString(),\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Robot Width (in)\",\r\n      key: \"WidthInches\",\r\n      value: newPitData.WidthInches.toString(),\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Robot Length (in)\",\r\n      key: \"LengthInches\",\r\n      value: newPitData.LengthInches.toString(),\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Height (in)\",\r\n      key: \"HeightInches\",\r\n      value: newPitData.HeightInches.toString(),\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Frame Clearance (in)\",\r\n      key: \"FrameClearanceInches\",\r\n      value: newPitData.FrameClearanceInches.toString(),\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Stability\",\r\n      key: \"Stability\",\r\n      value: newPitData.Stability,\r\n      type: \"dropdown\",\r\n      droptype: stabilityItems,\r\n    },\r\n    {\r\n      label: \"Well Made\",\r\n      key: \"WellMade\",\r\n      value: newPitData.WellMade,\r\n      type: \"dropdown\",\r\n      droptype: wellMadeItems,\r\n    },\r\n    {\r\n      label: \"Single Intake Shooter\",\r\n      key: \"SingleIntakeShooter\",\r\n      value: newPitData.SingleIntakeShooter,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Pickup Spots\",\r\n      key: \"PickupSpots\",\r\n      value: newPitData.PickupSpots,\r\n      type: \"dropdown\",\r\n      droptype: pickupSpotsItems,\r\n    },\r\n    {\r\n      label: \"Score Spots\",\r\n      key: \"ScoreSpots\",\r\n      value: newPitData.ScoreSpots,\r\n      type: \"dropdown\",\r\n      droptype: scoreSpotsItems,\r\n    },\r\n    {\r\n      label: \"Center of Gravity\",\r\n      key: \"CenterOfGravity\",\r\n      value: newPitData.CenterOfGravity,\r\n      type: \"dropdown\",\r\n      droptype: gravityItems,\r\n    },\r\n    {\r\n      label: \"Years Using Swerve\",\r\n      key: \"YearsUsingSwerve\",\r\n      value: newPitData.YearsUsingSwerve,\r\n      type: \"dropdown\",\r\n      droptype: years,\r\n    },\r\n    {\r\n      label: \"Shoots From\",\r\n      key: \"ShootsFrom\",\r\n      value: newPitData.ShootsFrom,\r\n      type: \"dropdown\",\r\n      droptype: shootSpotsItems,\r\n    },\r\n    {\r\n      label: \"Object Recognition\",\r\n      key: \"ObjectRecognition\",\r\n      value: newPitData.ObjectRecognition,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Read April Tags\",\r\n      key: \"ReadAprilTags\",\r\n      value: newPitData.ReadAprilTags,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Autonomous Program to leave\",\r\n      key: \"AutonomousProgram\",\r\n      value: newPitData.AutonomousProgram,\r\n      type: \"boolean\",\r\n    },\r\n    //{ label: \"Auto Programs for Speaker\", key: \"AutoProgramsForSpeaker\", value: newPitData.AutoProgramsForSpeaker, type: \"custom\" },\r\n    {\r\n      label: \"Can Get on Stage\",\r\n      key: \"CanGetOnStage\",\r\n      value: newPitData.CanGetOnStage,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Can Score Notes in Trap\",\r\n      key: \"CanScoreNotesInTrap\",\r\n      value: newPitData.CanScoreNotesInTrap,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Human Player Spotlight\",\r\n      key: \"HumanPlayerSpotlight\",\r\n      value: newPitData.HumanPlayerSpotlight,\r\n      type: \"dropdown\",\r\n      droptype: humanPlayerSpotlightItems,\r\n    },\r\n    {\r\n      label: \"Can Cheesecake or lift robot\",\r\n      key: \"CheesecakeAbility\",\r\n      value: newPitData.CheesecakeAbility,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Comments\",\r\n      key: \"Comments\",\r\n      value: newPitData.Comments,\r\n      type: \"text\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View\r\n      style={styles.container}\r\n      onStartShouldSetResponderCapture={handleScroll}\r\n    >\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={{ flex: 1 }}\r\n        keyboardVerticalOffset={Platform.OS === \"ios\" ? 90 : 90} // Adjust this offset as needed\r\n      >\r\n        <View style={styles.headerContainer}>\r\n          <Text style={styles.headerText}>\r\n            Pit Scouting for Team {currentTeamNumber}\r\n          </Text>\r\n        </View>\r\n        <FlatList\r\n          scrollEnabled={true}\r\n          style={styles.container}\r\n          data={data}\r\n          keyExtractor={(item) => item.key}\r\n          renderItem={({ item }) => (\r\n            <View>\r\n              {item.type === \"text\" && (\r\n                <InputField\r\n                  label={item.label}\r\n                  value={item.value}\r\n                  onChange={(text) => setField(item.key, text)}\r\n                  keyboardType=\"default\"\r\n                />\r\n              )}\r\n              {item.type === \"number\" && (\r\n                <InputField\r\n                  label={item.label}\r\n                  value={item.value.toString()}\r\n                  onChange={(text) => setNumericField(item.key, text)}\r\n                  keyboardType=\"numeric\"\r\n                />\r\n              )}\r\n              {item.type === \"boolean\" && (\r\n                <ToggleSwitch\r\n                  label={item.label}\r\n                  value={item.value}\r\n                  onToggle={(newValue) => setBooleanField(item.key, newValue)}\r\n                />\r\n              )}\r\n              {item.type === \"dropdown\" && (\r\n                <DropDownSelector\r\n                  label={item.label}\r\n                  value={item.value}\r\n                  items={item.droptype}\r\n                  setValue={(text) => setEnumField(item.key, text)}\r\n                />\r\n              )}\r\n              {item.type === \"timer\" && (\r\n                <Timer\r\n                  setValue={(text) => setArrayField(item.key, text)}\r\n                  dropPiece={() =>\r\n                    setNumericField(\r\n                      \"DroppedGamePiece\",\r\n                      newMatchData.DroppedGamePiece + 1\r\n                    )\r\n                  }\r\n                />\r\n              )}\r\n              {item.type === \"grid\" && <Grid rows={3} columns={3} />}\r\n              {item.type === \"custom\" && <CustomComponent />}\r\n            </View>\r\n          )}\r\n        />\r\n\r\n        <SaveButton save={handleSavePitData} />\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  headerContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 10,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"#F6EB14\",\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default Pits;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}