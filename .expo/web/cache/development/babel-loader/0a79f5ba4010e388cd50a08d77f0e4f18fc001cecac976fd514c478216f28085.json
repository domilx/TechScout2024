{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport QRCode from \"react-native-qrcode-svg\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Icon3 from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Modal from \"react-native-modal\";\nimport * as Haptics from \"expo-haptics\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { loadPitData, isPitScanned, savePitScanned } from \"../logic/PitLogic\";\nimport { loadMatchCount } from \"../logic/TeamLogic\";\nimport { loadMatchData, saveMatchScanned, isMatchScanned } from \"../logic/MatchLogic\";\nimport { initialPitData } from \"../Models/PitModel\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction CodeGenerator(_ref) {\n  var route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPitData = _useState2[0],\n    setCurrentPitData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    MatchModalState = _useState4[0],\n    setMatchModalState = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isClicked = _useState6[0],\n    setIsClicked = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    items = _useState8[0],\n    setItems = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    matchCount = _useState12[0],\n    setMatchCount = _useState12[1];\n  var isFocused = useIsFocused();\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isClickedArray = _useState14[0],\n    setIsClickedArray = _useState14[1];\n  var Swiper = require('react-native-swiper');\n  useEffect(function () {\n    setLoading(true);\n    var loadDataForQR = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var pitData = yield loadPitData(route.params.currentTeamNumber);\n          var currentMatchCount = yield loadMatchCount(route.params.currentTeamNumber);\n          var PitScanState = yield isPitScanned(route.params.currentTeamNumber);\n          var initialIsClickedArray = yield Promise.all(Array(currentMatchCount).fill(0).map(function () {\n            var _ref3 = _asyncToGenerator(function* (_, i) {\n              var matchNumber = i;\n              return yield isMatchScanned(route.params.currentTeamNumber, matchNumber);\n            });\n            return function (_x, _x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }()));\n          if (Number.isInteger(currentMatchCount) && currentMatchCount > 0) {\n            var loadedItems = {};\n            var matchDataPromises = Array.from({\n              length: currentMatchCount\n            }, function () {\n              var _ref4 = _asyncToGenerator(function* (_, i) {\n                var matchData = yield loadMatchData(route.params.currentTeamNumber, i);\n                loadedItems[`MatchData${i + 1}`] = matchData;\n              });\n              return function (_x3, _x4) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            yield Promise.allSettled(matchDataPromises);\n            setIsClicked(!PitScanState);\n            setMatchCount(currentMatchCount);\n            setCurrentPitData(pitData);\n            setItems(loadedItems);\n            setIsClickedArray(initialIsClickedArray);\n            setLoading(false);\n          } else {\n            setIsClicked(!PitScanState);\n            setMatchCount(currentMatchCount);\n            setCurrentPitData(pitData);\n            setLoading(false);\n          }\n        } catch (error) {\n          console.error(\"Error loading data:\", error);\n        }\n      });\n      return function loadDataForQR() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadDataForQR();\n  }, [route.params.currentTeamNumber, isFocused]);\n  if (loading) {\n    return _jsx(Text, {\n      children: \"LOADING ...\"\n    });\n  }\n  var MatchItem = function MatchItem(_ref5) {\n    var matchData = _ref5.matchData,\n      isClicked = _ref5.isClicked,\n      onWasScanned = _ref5.onWasScanned;\n    return _jsxs(View, {\n      style: styles.slide,\n      children: [_jsxs(Text, {\n        style: styles.boldText,\n        children: [\"Match \", JSON.stringify(matchData.MatchNumber)]\n      }), _jsx(QRCode, {\n        value: JSON.stringify(matchData, null, 2),\n        size: 300,\n        logo: require(\"../assets/logo.png\"),\n        logoSize: 75\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"baseline\"\n        },\n        onPress: onWasScanned,\n        children: [_jsx(Text, {\n          style: styles.scannedText,\n          children: \"Was Scanned\"\n        }), _jsx(Icon3, {\n          color: \"#1E1E1E\",\n          name: !isClicked ? \"checkbox-blank-outline\" : \"checkbox-marked\",\n          size: 30,\n          style: styles.iconStyle\n        })]\n      })]\n    });\n  };\n  var closeModal = function closeModal() {\n    setMatchModalState(false);\n    Haptics.impactAsync(Haptics.NotificationFeedbackType.Medium);\n  };\n  var SliderBox = function SliderBox(_ref6) {\n    var items = _ref6.items;\n    return _jsx(Swiper, {\n      style: styles.wrapper,\n      loop: false,\n      children: Object.keys(items).map(function (matchKey, index) {\n        return _jsx(MatchItem, {\n          matchData: items[matchKey],\n          isClicked: isClickedArray[index],\n          onWasScanned: function onWasScanned() {\n            return handleMatchScanned(index);\n          }\n        }, index);\n      })\n    });\n  };\n  var Placeholder = function Placeholder() {\n    return _jsx(View, {\n      style: styles.placeholder,\n      children: _jsx(Text, {\n        style: styles.boldText,\n        children: \"Nothing Saved\"\n      })\n    });\n  };\n  var handleMatchScanned = function () {\n    var _ref7 = _asyncToGenerator(function* (matchNumber) {\n      try {\n        yield saveMatchScanned(route.params.currentTeamNumber, matchNumber);\n        var updatedIsClickedArray = _toConsumableArray(isClickedArray);\n        updatedIsClickedArray[matchNumber] = true;\n        setIsClickedArray(updatedIsClickedArray);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    });\n    return function handleMatchScanned(_x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var handlePitScanned = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      if (!isClicked) {\n        try {\n          Alert.alert(\"Are you sure?\", \"You are removing the was scanned status for this team.\", [{\n            text: \"Cancel\",\n            onPress: function onPress() {\n              return console.log(\"Cancel Pressed\");\n            },\n            style: \"cancel\"\n          }, {\n            text: \"OK\",\n            onPress: function () {\n              var _onPress = _asyncToGenerator(function* () {\n                yield savePitScanned(route.params.currentTeamNumber, false);\n                setIsClicked(true);\n              });\n              function onPress() {\n                return _onPress.apply(this, arguments);\n              }\n              return onPress;\n            }()\n          }], {\n            cancelable: false\n          });\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      } else {\n        try {\n          yield savePitScanned(route.params.currentTeamNumber, true);\n          setIsClicked(false);\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      }\n    });\n    return function handlePitScanned() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleGoToMatch = function handleGoToMatch() {\n    setMatchModalState(true);\n    Haptics.impactAsync(Haptics.NotificationFeedbackType.Medium);\n  };\n  return _jsxs(View, {\n    style: styles.topContainer,\n    children: [_jsxs(Text, {\n      style: styles.tittleText,\n      children: [\"Pit Data for team \", route.params.currentTeamNumber]\n    }), JSON.stringify(currentPitData) === JSON.stringify(initialPitData) ? _jsx(Placeholder, {}) : _jsxs(View, {\n      style: {\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [_jsx(QRCode, {\n        value: JSON.stringify(currentPitData, null, 2),\n        size: 300,\n        logo: require(\"../assets/logo.png\"),\n        logoSize: 75\n      }), _jsxs(TouchableOpacity, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"baseline\"\n        },\n        onPress: function onPress() {\n          return handlePitScanned();\n        },\n        children: [_jsx(Text, {\n          style: styles.scannedText,\n          children: \"Was Scanned\"\n        }), _jsx(Icon3, {\n          color: \"#1E1E1E\",\n          name: isClicked ? \"checkbox-blank-outline\" : \"checkbox-marked\",\n          size: 30,\n          style: styles.iconStyle\n        })]\n      })]\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleGoToMatch();\n      },\n      style: styles.openModal,\n      children: [_jsxs(Text, {\n        style: styles.buttonsText,\n        children: [\"Match Data for team \", route.params.currentTeamNumber]\n      }), _jsx(Icon, {\n        name: \"arrow-forward\",\n        color: \"#1E1E1E\",\n        size: 30,\n        style: styles.iconStyle\n      })]\n    }), _jsxs(Modal, {\n      animationIn: \"slideInRight\",\n      animationOut: \"slideOutRight\",\n      animationInTiming: 250,\n      animationOutTiming: 250,\n      isVisible: MatchModalState,\n      onBackdropPress: closeModal,\n      useNativeDriver: true,\n      hideModalContentWhileAnimating: true,\n      style: styles.modalScreen,\n      children: [_jsx(View, {\n        style: styles.tittleContainer,\n        children: _jsxs(Text, {\n          style: styles.tittleText,\n          children: [\"Match Data for team \", route.params.currentTeamNumber]\n        })\n      }), _jsx(View, {\n        style: styles.modalContainer,\n        children: matchCount === 0 ? _jsx(Placeholder, {}) : _jsx(SliderBox, {\n          items: items\n        })\n      }), _jsx(View, {\n        style: styles.returnContainer,\n        children: _jsxs(TouchableOpacity, {\n          onPress: closeModal,\n          style: styles.closeModal,\n          children: [_jsx(Icon, {\n            name: \"arrow-back-outline\",\n            color: \"#1E1E1E\",\n            size: 30,\n            style: styles.iconStyle\n          }), _jsx(Text, {\n            style: styles.buttonsText,\n            children: \"QR for Pitscouting\"\n          })]\n        })\n      })]\n    })]\n  });\n}\nexport default CodeGenerator;\nvar styles = StyleSheet.create({\n  topContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  wrapper: {},\n  slide: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20,\n    marginBottom: 20,\n    marginHorizontal: 20,\n    borderRadius: 20\n  },\n  scannedText: {\n    fontWeight: \"400\",\n    fontSize: 20,\n    paddingTop: 30,\n    paddingBottom: 4\n  },\n  boldText: {\n    fontWeight: \"bold\",\n    fontSize: 30,\n    paddingBottom: 10\n  },\n  placeholder: {\n    height: 300,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontWeight: \"bold\",\n    fontSize: 30\n  },\n  openModal: {\n    flexDirection: \"row\",\n    width: \"80%\",\n    height: 50,\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#F6EB14\",\n    marginTop: 50\n  },\n  iconStyle: {\n    marginRight: 10\n  },\n  buttonsText: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  tittleText: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    paddingBottom: 20\n  },\n  modalScreen: {\n    backgroundColor: \"white\",\n    margin: 0\n  },\n  modalContainer: {\n    flex: 3,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  tittleContainer: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingTop: 100\n  },\n  returnContainer: {\n    height: 200,\n    width: \"100%\",\n    paddingBottom: 100,\n    backgroundColor: \"white\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\"\n  },\n  closeModal: {\n    flexDirection: \"row\",\n    width: \"80%\",\n    height: 50,\n    borderWidth: 2,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#F6EB14\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","StyleSheet","Alert","QRCode","Icon","Icon3","Modal","Haptics","useIsFocused","loadPitData","isPitScanned","savePitScanned","loadMatchCount","loadMatchData","saveMatchScanned","isMatchScanned","initialPitData","jsx","_jsx","jsxs","_jsxs","CodeGenerator","_ref","route","_useState","_useState2","_slicedToArray","currentPitData","setCurrentPitData","_useState3","_useState4","MatchModalState","setMatchModalState","_useState5","_useState6","isClicked","setIsClicked","_useState7","_useState8","items","setItems","_useState9","_useState10","loading","setLoading","_useState11","_useState12","matchCount","setMatchCount","isFocused","_useState13","_useState14","isClickedArray","setIsClickedArray","Swiper","require","loadDataForQR","_ref2","_asyncToGenerator","pitData","params","currentTeamNumber","currentMatchCount","PitScanState","initialIsClickedArray","Promise","all","Array","fill","map","_ref3","_","i","matchNumber","_x","_x2","apply","arguments","Number","isInteger","loadedItems","matchDataPromises","from","length","_ref4","matchData","_x3","_x4","allSettled","error","console","children","MatchItem","_ref5","onWasScanned","style","styles","slide","boldText","JSON","stringify","MatchNumber","value","size","logo","logoSize","flexDirection","alignItems","onPress","scannedText","color","name","iconStyle","closeModal","impactAsync","NotificationFeedbackType","Medium","SliderBox","_ref6","wrapper","loop","Object","keys","matchKey","index","handleMatchScanned","Placeholder","placeholder","_ref7","updatedIsClickedArray","_toConsumableArray","_x5","handlePitScanned","_ref8","alert","text","log","_onPress","cancelable","handleGoToMatch","topContainer","tittleText","alignContent","justifyContent","openModal","buttonsText","animationIn","animationOut","animationInTiming","animationOutTiming","isVisible","onBackdropPress","useNativeDriver","hideModalContentWhileAnimating","modalScreen","tittleContainer","modalContainer","returnContainer","create","flex","marginTop","marginBottom","marginHorizontal","borderRadius","fontWeight","fontSize","paddingTop","paddingBottom","height","width","borderWidth","backgroundColor","marginRight","margin"],"sources":["C:/Users/Noril/Documents/TechScout/screens/CodeGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n} from \"react-native\";\r\nimport QRCode from \"react-native-qrcode-svg\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport Icon3 from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport Modal from \"react-native-modal\";\r\nimport * as Haptics from \"expo-haptics\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport {\r\n  loadPitData,\r\n  isPitScanned,\r\n  savePitScanned,\r\n} from \"../logic/PitLogic\";\r\nimport {\r\n  loadMatchCount,\r\n} from \"../logic/TeamLogic\";\r\nimport {\r\n  loadMatchData,\r\n  saveMatchScanned,\r\n  isMatchScanned,\r\n} from \"../logic/MatchLogic\";\r\nimport { initialPitData } from \"../Models/PitModel\";\r\n\r\nfunction CodeGenerator({ route }) {\r\n  const [currentPitData, setCurrentPitData] = useState([]);\r\n  const [MatchModalState, setMatchModalState] = useState(false);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [matchCount, setMatchCount] = useState(0);\r\n  const isFocused = useIsFocused();\r\n  const [isClickedArray, setIsClickedArray] = useState([]);\r\n  const Swiper = require('react-native-swiper');\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    const loadDataForQR = async () => {\r\n      try {\r\n        const pitData = await loadPitData(route.params.currentTeamNumber);\r\n        const currentMatchCount = await loadMatchCount(\r\n          route.params.currentTeamNumber\r\n        );\r\n        const PitScanState = await isPitScanned(route.params.currentTeamNumber);\r\n        const initialIsClickedArray = await Promise.all(\r\n          Array(currentMatchCount)\r\n            .fill(0)\r\n            .map(async (_, i) => {\r\n              const matchNumber = i;\r\n              return await isMatchScanned(\r\n                route.params.currentTeamNumber,\r\n                matchNumber\r\n              );\r\n            })\r\n        );\r\n\r\n        if (Number.isInteger(currentMatchCount) && currentMatchCount > 0) {\r\n          const loadedItems = {};\r\n          const matchDataPromises = Array.from(\r\n            { length: currentMatchCount },\r\n            async (_, i) => {\r\n              const matchData = await loadMatchData(\r\n                route.params.currentTeamNumber,\r\n                i \r\n              );\r\n              loadedItems[`MatchData${i + 1}`] = matchData;\r\n            }\r\n          );\r\n          await Promise.allSettled(matchDataPromises);\r\n          setIsClicked(!PitScanState);\r\n          setMatchCount(currentMatchCount);\r\n          setCurrentPitData(pitData);\r\n          setItems(loadedItems);\r\n          setIsClickedArray(initialIsClickedArray);\r\n          setLoading(false);\r\n        } else {\r\n          setIsClicked(!PitScanState);\r\n          setMatchCount(currentMatchCount);\r\n          setCurrentPitData(pitData);\r\n          setLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading data:\", error);\r\n      }\r\n    };\r\n\r\n    loadDataForQR();\r\n  }, [route.params.currentTeamNumber, isFocused]);\r\n\r\n  if (loading) {\r\n    return <Text>LOADING ...</Text>;\r\n  }\r\n\r\n  const MatchItem = ({ matchData, isClicked, onWasScanned }) => (\r\n    <View style={styles.slide}>\r\n      <Text style={styles.boldText}>\r\n        Match {JSON.stringify(matchData.MatchNumber)}\r\n      </Text>\r\n      <QRCode\r\n        value={JSON.stringify(matchData, null, 2)}\r\n        size={300}\r\n        logo={require(\"../assets/logo.png\")}\r\n        logoSize={75}\r\n      />\r\n      <TouchableOpacity\r\n        style={{ flexDirection: \"row\", alignItems: \"baseline\" }}\r\n        onPress={onWasScanned}\r\n      >\r\n        <Text style={styles.scannedText}>Was Scanned</Text>\r\n        <Icon3\r\n          color=\"#1E1E1E\"\r\n          name={!isClicked ? \"checkbox-blank-outline\" : \"checkbox-marked\"}\r\n          size={30}\r\n          style={styles.iconStyle}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  const closeModal = () => {\r\n    setMatchModalState(false);\r\n    Haptics.impactAsync(Haptics.NotificationFeedbackType.Medium);\r\n  };\r\n\r\n  const SliderBox = ({ items }) => (\r\n    <Swiper style={styles.wrapper} loop={false}>\r\n      {Object.keys(items).map((matchKey, index) => (\r\n        <MatchItem\r\n          key={index}\r\n          matchData={items[matchKey]}\r\n          isClicked={isClickedArray[index]}\r\n          onWasScanned={() => handleMatchScanned(index)}\r\n        />\r\n      ))}\r\n    </Swiper>\r\n  );\r\n\r\n  const Placeholder = () => (\r\n    <View style={styles.placeholder}>\r\n      <Text style={styles.boldText}>Nothing Saved</Text>\r\n    </View>\r\n  );\r\n\r\n  const handleMatchScanned = async (matchNumber) => {\r\n    try {\r\n      await saveMatchScanned(route.params.currentTeamNumber, matchNumber);\r\n\r\n      const updatedIsClickedArray = [...isClickedArray];\r\n      updatedIsClickedArray[matchNumber] = true;\r\n      setIsClickedArray(updatedIsClickedArray);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePitScanned = async () => {\r\n    if (!isClicked) {\r\n      try{\r\n        Alert.alert(\r\n          \"Are you sure?\",\r\n          \"You are removing the was scanned status for this team.\",\r\n          [\r\n            {\r\n              text: \"Cancel\",\r\n              onPress: () => console.log(\"Cancel Pressed\"),\r\n              style: \"cancel\"\r\n            },\r\n            { text: \"OK\", onPress: async () => {\r\n              await savePitScanned(route.params.currentTeamNumber, false);\r\n              setIsClicked(true);\r\n            }}\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n      }\r\n      catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    }else{\r\n    try {\r\n      await savePitScanned(route.params.currentTeamNumber, true);\r\n      setIsClicked(false);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }}\r\n  };\r\n\r\n  const handleGoToMatch = () => {\r\n    setMatchModalState(true);\r\n    Haptics.impactAsync(Haptics.NotificationFeedbackType.Medium);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.topContainer}>\r\n      <Text style={styles.tittleText}>\r\n        Pit Data for team {route.params.currentTeamNumber}\r\n      </Text>\r\n      {JSON.stringify(currentPitData) === JSON.stringify(initialPitData) ? (\r\n        <Placeholder />\r\n      ) : (\r\n        <View\r\n          style={{\r\n            alignContent: \"center\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <QRCode\r\n            value={JSON.stringify(currentPitData, null, 2)}\r\n            size={300}\r\n            logo={require(\"../assets/logo.png\")}\r\n            logoSize={75}\r\n          />\r\n          <TouchableOpacity\r\n            style={{ flexDirection: \"row\", alignItems: \"baseline\" }}\r\n            onPress={() => handlePitScanned()}\r\n          >\r\n            <Text style={styles.scannedText}>Was Scanned</Text>\r\n            <Icon3\r\n              color=\"#1E1E1E\"\r\n              name={isClicked ? \"checkbox-blank-outline\" : \"checkbox-marked\"}\r\n              size={30}\r\n              style={styles.iconStyle}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n\r\n      <TouchableOpacity\r\n        onPress={() => handleGoToMatch()}\r\n        style={styles.openModal}\r\n      >\r\n        <Text style={styles.buttonsText}>\r\n          Match Data for team {route.params.currentTeamNumber}\r\n        </Text>\r\n        <Icon\r\n          name={\"arrow-forward\"}\r\n          color={\"#1E1E1E\"}\r\n          size={30}\r\n          style={styles.iconStyle}\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      <Modal\r\n        animationIn=\"slideInRight\"\r\n        animationOut=\"slideOutRight\"\r\n        animationInTiming={250}\r\n        animationOutTiming={250}\r\n        isVisible={MatchModalState}\r\n        onBackdropPress={closeModal}\r\n        useNativeDriver={true}\r\n        hideModalContentWhileAnimating={true}\r\n        style={styles.modalScreen}\r\n        \r\n      >\r\n        <View style={styles.tittleContainer}>\r\n          <Text style={styles.tittleText}>\r\n            Match Data for team {route.params.currentTeamNumber}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.modalContainer}>\r\n          {matchCount === 0 ? <Placeholder /> : <SliderBox items={items} />}\r\n        </View>\r\n\r\n        <View style={styles.returnContainer}>\r\n          <TouchableOpacity onPress={closeModal} style={styles.closeModal}>\r\n            <Icon\r\n              name={\"arrow-back-outline\"}\r\n              color={\"#1E1E1E\"}\r\n              size={30}\r\n              style={styles.iconStyle}\r\n            />\r\n            <Text style={styles.buttonsText}>QR for Pitscouting</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CodeGenerator;\r\n\r\nconst styles = StyleSheet.create({\r\n  topContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  wrapper: {},\r\n  slide: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n    borderRadius: 20,\r\n  },\r\n  scannedText: {\r\n    fontWeight: \"400\",\r\n    fontSize: 20,\r\n    paddingTop: 30,\r\n    paddingBottom: 4,\r\n  },\r\n  boldText: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n    paddingBottom: 10,\r\n  },\r\n  placeholder: {\r\n    height: 300,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n  },\r\n  openModal: {\r\n    flexDirection: \"row\",\r\n    width: \"80%\",\r\n    height: 50,\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#F6EB14\",\r\n    marginTop: 50,\r\n  },\r\n  iconStyle: {\r\n    marginRight: 10,\r\n  },\r\n  buttonsText: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  tittleText: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    paddingBottom: 20,\r\n  },\r\n  modalScreen: {\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n  },\r\n  modalContainer: {\r\n    flex: 3,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  tittleContainer: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    paddingTop: 100,\r\n  },\r\n  returnContainer: {\r\n    height: 200,\r\n    width: \"100%\",\r\n    paddingBottom: 100,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  closeModal: {\r\n    flexDirection: \"row\",\r\n    width: \"80%\",\r\n    height: 50,\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#F6EB14\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}