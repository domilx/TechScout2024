{"ast":null,"code":"export var GamePieceType = function (GamePieceType) {\n  GamePieceType[\"GamePiece1\"] = \"Cone\";\n  GamePieceType[\"GamePiece2\"] = \"Cube\";\n  GamePieceType[\"GamePiece3\"] = \"3\";\n  GamePieceType[\"GamePiece4\"] = \"4\";\n  return GamePieceType;\n}({});\nexport var Objective = function (Objective) {\n  Objective[\"Stage1\"] = \"Stage 1\";\n  Objective[\"Stage2\"] = \"Stage 2\";\n  Objective[\"Stage3\"] = \"Stage 3\";\n  Objective[\"Stage4\"] = \"Stage 4\";\n  return Objective;\n}({});\nexport var AutoMobilityPoints = 6;\nexport var Position = function (Position) {\n  Position[\"Left\"] = \"Left\";\n  Position[\"Middle\"] = \"Middle\";\n  Position[\"Right\"] = \"Right\";\n  return Position;\n}({});\nexport var Speed = function (Speed) {\n  Speed[\"Slow\"] = \"Slow\";\n  Speed[\"Average\"] = \"Average\";\n  Speed[\"Fast\"] = \"Fast\";\n  return Speed;\n}({});\nexport var Aware = function (Aware) {\n  Aware[\"Minus\"] = \"Less aware\";\n  Aware[\"Normal\"] = \"Average\";\n  Aware[\"More\"] = \"Very aware\";\n  return Aware;\n}({});\nexport var initialMatchData = {\n  ScoutName: \"\",\n  TeamNumber: 0,\n  MatchNumber: 0,\n  AutoGamePiece1: 0,\n  AutoGamePiece2: 0,\n  AutoGamePiece3: 0,\n  AutoGamePiece4: 0,\n  AutoPosition: Position.Middle,\n  AutoMobility: false,\n  AutoObjective1: Objective.Stage1,\n  AutoObjective2: Objective.Stage1,\n  AutoRobotFalls: false,\n  CycleTime: [],\n  EndGameObjective1: Objective.Stage1,\n  EndGameObjective2: Objective.Stage1,\n  DroppedGamePiece: 0,\n  Comment: \"\",\n  TotalPointsAlliance: 0,\n  RankingPointsAlliance: 0,\n  AllianceObjective1: 0,\n  AllianceObjective2: false,\n  WonMatch: false,\n  TeleopStatus1: false,\n  TeleopStatus2: false,\n  TeleopStatus3: false,\n  TeleopStatus4: false,\n  TeleopStatus5: Speed.Average,\n  TeleopStatus6: Aware.Normal,\n  TeleopGamePiece1: 0,\n  TeleopGamePiece2: 0,\n  TeleopGamePiece3: 0,\n  TeleopGamePiece4: 0,\n  GamePiecesGrid: Array.from({\n    length: 3 * 3\n  }, function (_, index) {\n    var rowIndex = Math.floor(index / 3);\n    var columnIndex = index % 3;\n    return {\n      rowIndex: rowIndex,\n      columnIndex: columnIndex,\n      autoScored: 0,\n      GamePieceType: GamePieceType.GamePiece1,\n      count: 0\n    };\n  })\n};","map":{"version":3,"names":["GamePieceType","Objective","AutoMobilityPoints","Position","Speed","Aware","initialMatchData","ScoutName","TeamNumber","MatchNumber","AutoGamePiece1","AutoGamePiece2","AutoGamePiece3","AutoGamePiece4","AutoPosition","Middle","AutoMobility","AutoObjective1","Stage1","AutoObjective2","AutoRobotFalls","CycleTime","EndGameObjective1","EndGameObjective2","DroppedGamePiece","Comment","TotalPointsAlliance","RankingPointsAlliance","AllianceObjective1","AllianceObjective2","WonMatch","TeleopStatus1","TeleopStatus2","TeleopStatus3","TeleopStatus4","TeleopStatus5","Average","TeleopStatus6","Normal","TeleopGamePiece1","TeleopGamePiece2","TeleopGamePiece3","TeleopGamePiece4","GamePiecesGrid","Array","from","length","_","index","rowIndex","Math","floor","columnIndex","autoScored","GamePiece1","count"],"sources":["C:/Users/Noril/Documents/TechScout/Models/MatchModel.ts"],"sourcesContent":["export interface MatchModel {\r\n  // Robot Information\r\n  ScoutName: string;\r\n  TeamNumber: number;\r\n  MatchNumber: number;\r\n  //Auto\r\n  AutoGamePiece1: number; //amount of cubes\r\n  AutoGamePiece2: number; // amount of cones\r\n  AutoGamePiece3: number; // N/A\r\n  AutoGamePiece4: number; // N/A\r\n  AutoPosition: Position; //Left, Middle, Right\r\n  AutoMobility: boolean; //Yes or No\r\n  AutoObjective1: Objective; //Stage 1, 2, 3, 4\r\n  AutoObjective2: Objective; //Stage 1, 2, 3, 4\r\n  AutoRobotFalls: boolean; //Yes or No\r\n  //Teleop + Endgame\r\n  CycleTime: number[]; //array of cycle times\r\n  EndGameObjective1: Objective; //Stage 1, 2, 3, 4\r\n  EndGameObjective2: Objective; //Stage 1, 2, 3, 4\r\n  DroppedGamePiece: number;\r\n  // Robot Performance + match results\r\n  Comment: string; //comment\r\n  TotalPointsAlliance: number; //total points\r\n  RankingPointsAlliance: number; //ranking points\r\n  AllianceObjective1: number; //Links\r\n  AllianceObjective2: boolean; //Coopertition\r\n  WonMatch: boolean;\r\n  TeleopStatus1: boolean; //Robot falls\r\n  TeleopStatus2: boolean; //Incapacitated? --> if more than 8 seconds then considered YES\r\n  TeleopStatus3: boolean; //plays defense\r\n  TeleopStatus4: boolean; //Robot Tippy\r\n  TeleopStatus5: Speed; //Robot Quickness\r\n  TeleopStatus6: Aware; //Field Awareness\r\n  TeleopGamePiece1: number; //Cubes\r\n  TeleopGamePiece2: number; //Cones\r\n  TeleopGamePiece3: number; //N/A\r\n  TeleopGamePiece4: number; //n/A\r\n  GamePiecesGrid: GamePieceCell[];\r\n  gotScanned?: boolean;\r\n}\r\n\r\nexport type GamePieceCell = {\r\n  rowIndex: number;\r\n  columnIndex: number;\r\n  autoScored: number;\r\n  GamePieceType: GamePieceType;\r\n  count: number;\r\n};\r\n\r\nexport enum GamePieceType {\r\n  GamePiece1 = \"Cone\",\r\n  GamePiece2 = \"Cube\",\r\n  GamePiece3 = \"3\",\r\n  GamePiece4 = \"4\",\r\n}\r\n\r\nexport enum Objective {\r\n  Stage1 = \"Stage 1\", // 2pts\r\n  Stage2 = \"Stage 2\", // 4pts\r\n  Stage3 = \"Stage 3\", // 6pts\r\n  Stage4 = \"Stage 4\", // 8pts\r\n}\r\n\r\nexport const AutoMobilityPoints = 6;\r\n\r\nexport enum Position {\r\n  Left = \"Left\",\r\n  Middle = \"Middle\",\r\n  Right = \"Right\",\r\n}\r\n\r\nexport enum Speed {\r\n  Slow = \"Slow\",\r\n  Average = \"Average\",\r\n  Fast = \"Fast\",\r\n}\r\n\r\nexport enum Aware {\r\n  Minus = \"Less aware\",\r\n  Normal = \"Average\",\r\n  More = \"Very aware\",\r\n}\r\n\r\nexport const initialMatchData: MatchModel = {\r\n  ScoutName: \"\",\r\n  TeamNumber: 0,\r\n  MatchNumber: 0,\r\n  AutoGamePiece1: 0,\r\n  AutoGamePiece2: 0,\r\n  AutoGamePiece3: 0,\r\n  AutoGamePiece4: 0,\r\n  AutoPosition: Position.Middle,\r\n  AutoMobility: false,\r\n  AutoObjective1: Objective.Stage1,\r\n  AutoObjective2: Objective.Stage1,\r\n  AutoRobotFalls: false,\r\n  CycleTime: [],\r\n  EndGameObjective1: Objective.Stage1,\r\n  EndGameObjective2: Objective.Stage1,\r\n  DroppedGamePiece: 0,\r\n  Comment: \"\",\r\n  TotalPointsAlliance: 0,\r\n  RankingPointsAlliance: 0,\r\n  AllianceObjective1: 0,\r\n  AllianceObjective2: false,\r\n  WonMatch: false,\r\n  TeleopStatus1: false,\r\n  TeleopStatus2: false,\r\n  TeleopStatus3: false,\r\n  TeleopStatus4: false,\r\n  TeleopStatus5: Speed.Average,\r\n  TeleopStatus6: Aware.Normal,\r\n  TeleopGamePiece1: 0,\r\n  TeleopGamePiece2: 0,\r\n  TeleopGamePiece3: 0,\r\n  TeleopGamePiece4: 0,\r\n  GamePiecesGrid: Array.from({ length: 3 * 3 }, (_, index) => {\r\n    const rowIndex = Math.floor(index / 3);\r\n    const columnIndex = index % 3;\r\n\r\n    return {\r\n      rowIndex,\r\n      columnIndex,\r\n      autoScored: 0,\r\n      GamePieceType: GamePieceType.GamePiece1,\r\n      count: 0\r\n    };\r\n  }),\r\n\r\n\r\n};"],"mappings":"AAiDA,WAAYA,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAOzB,WAAYC,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAOrB,OAAO,IAAMC,kBAAkB,GAAG,CAAC;AAEnC,WAAYC,QAAQ,aAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAMpB,WAAYC,KAAK,aAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAMjB,WAAYC,KAAK,aAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAMjB,OAAO,IAAMC,gBAA4B,GAAG;EAC1CC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,YAAY,EAAEX,QAAQ,CAACY,MAAM;EAC7BC,YAAY,EAAE,KAAK;EACnBC,cAAc,EAAEhB,SAAS,CAACiB,MAAM;EAChCC,cAAc,EAAElB,SAAS,CAACiB,MAAM;EAChCE,cAAc,EAAE,KAAK;EACrBC,SAAS,EAAE,EAAE;EACbC,iBAAiB,EAAErB,SAAS,CAACiB,MAAM;EACnCK,iBAAiB,EAAEtB,SAAS,CAACiB,MAAM;EACnCM,gBAAgB,EAAE,CAAC;EACnBC,OAAO,EAAE,EAAE;EACXC,mBAAmB,EAAE,CAAC;EACtBC,qBAAqB,EAAE,CAAC;EACxBC,kBAAkB,EAAE,CAAC;EACrBC,kBAAkB,EAAE,KAAK;EACzBC,QAAQ,EAAE,KAAK;EACfC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE/B,KAAK,CAACgC,OAAO;EAC5BC,aAAa,EAAEhC,KAAK,CAACiC,MAAM;EAC3BC,gBAAgB,EAAE,CAAC;EACnBC,gBAAgB,EAAE,CAAC;EACnBC,gBAAgB,EAAE,CAAC;EACnBC,gBAAgB,EAAE,CAAC;EACnBC,cAAc,EAAEC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE,CAAC,GAAG;EAAE,CAAC,EAAE,UAACC,CAAC,EAAEC,KAAK,EAAK;IAC1D,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;IACtC,IAAMI,WAAW,GAAGJ,KAAK,GAAG,CAAC;IAE7B,OAAO;MACLC,QAAQ,EAARA,QAAQ;MACRG,WAAW,EAAXA,WAAW;MACXC,UAAU,EAAE,CAAC;MACbrD,aAAa,EAAEA,aAAa,CAACsD,UAAU;MACvCC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;AAGH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}