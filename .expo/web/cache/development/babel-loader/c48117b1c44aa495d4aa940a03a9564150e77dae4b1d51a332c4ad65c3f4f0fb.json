{"ast":null,"code":"export var DriveBaseType = function (DriveBaseType) {\n  DriveBaseType[\"Swerve\"] = \"Swerve\";\n  DriveBaseType[\"Tank\"] = \"Tank\";\n  DriveBaseType[\"Other\"] = \"Other\";\n  return DriveBaseType;\n}({});\nexport var DriveBaseMotor = function (DriveBaseMotor) {\n  DriveBaseMotor[\"CIM\"] = \"CIM\";\n  DriveBaseMotor[\"NEO\"] = \"NEO\";\n  DriveBaseMotor[\"FALCON\"] = \"FALCON\";\n  DriveBaseMotor[\"KRAKEN\"] = \"KRAKEN\";\n  return DriveBaseMotor;\n}({});\nexport var DriverExperience = function (DriverExperience) {\n  DriverExperience[\"Zero\"] = \"Zero\";\n  DriverExperience[\"One\"] = \"One\";\n  DriverExperience[\"Two\"] = \"Two\";\n  DriverExperience[\"Three\"] = \"Three\";\n  DriverExperience[\"Four\"] = \"Four\";\n  DriverExperience[\"Unknown\"] = \"Unknown\";\n  return DriverExperience;\n}({});\nexport var Stability = function (Stability) {\n  Stability[\"NO\"] = \"Not Stable\";\n  Stability[\"YES\"] = \"Stable\";\n  Stability[\"VERY_STABLE\"] = \"Very Stable\";\n  return Stability;\n}({});\nexport var initialPitData = {\n  RobScout: \"\",\n  TeamNb: 0,\n  RobTeamNm: \"\",\n  RobDrive: DriveBaseType.Other,\n  RobMotor: DriveBaseMotor.CIM,\n  RobDriveExp: DriverExperience.Zero,\n  RobWtlbs: 0,\n  RobWidth: 0,\n  RobLength: 0,\n  RobStble: Stability.NO,\n  RobQuest1: false,\n  RobQuest2: false,\n  RobQuest3: false,\n  RobQuest4: false,\n  RobQuest5: false,\n  RobQuest6: false,\n  RobQuest7: false,\n  RobQuest8: false,\n  RobQuest9: false,\n  RobQuest10: false,\n  RobQuest11: false,\n  RobQuest12: false,\n  RobQuest13: false,\n  RobQuest14: false,\n  RobQuest15: false,\n  RobComm1: \"\",\n  gotScanned: false\n};","map":{"version":3,"names":["DriveBaseType","DriveBaseMotor","DriverExperience","Stability","initialPitData","RobScout","TeamNb","RobTeamNm","RobDrive","Other","RobMotor","CIM","RobDriveExp","Zero","RobWtlbs","RobWidth","RobLength","RobStble","NO","RobQuest1","RobQuest2","RobQuest3","RobQuest4","RobQuest5","RobQuest6","RobQuest7","RobQuest8","RobQuest9","RobQuest10","RobQuest11","RobQuest12","RobQuest13","RobQuest14","RobQuest15","RobComm1","gotScanned"],"sources":["C:/Users/Noril/Documents/TechScout/Models/PitModel.ts"],"sourcesContent":["import { MatchModel } from './MatchModel';\r\nexport interface PitModel {  RobScout: string;\r\n  TeamNb: number;\r\n  RobTeamNm: string;\r\n  RobDrive: DriveBaseType;\r\n  RobMotor: DriveBaseMotor;\r\n  RobDriveExp: DriverExperience;\r\n  RobWtlbs: number;\r\n  RobWidth: number;\r\n  RobLength: number;\r\n  RobStble: Stability;\r\n  RobQuest1: boolean;\r\n  RobQuest2: boolean;\r\n  RobQuest3: boolean;\r\n  RobQuest4: boolean;\r\n  RobQuest5: boolean;\r\n  RobQuest6: boolean;\r\n  RobQuest7: boolean;\r\n  RobQuest8: boolean;\r\n  RobQuest9: boolean;\r\n  RobQuest10: boolean;\r\n  RobQuest11: boolean;\r\n  RobQuest12: boolean;\r\n  RobQuest13: boolean;\r\n  RobQuest14: boolean;\r\n  RobQuest15: boolean;\r\n  RobComm1: string;\r\n  gotScanned: boolean;\r\n  matches?: MatchModel[];\r\n}\r\n\r\n// Enums for dropdowns\r\nexport enum DriveBaseType {\r\n  Swerve = 'Swerve',\r\n  Tank = 'Tank',\r\n  Other = 'Other',\r\n}\r\n\r\nexport enum DriveBaseMotor {  CIM = 'CIM',\r\n  NEO = 'NEO',\r\n  FALCON = 'FALCON',\r\n  KRAKEN = 'KRAKEN',\r\n}\r\n\r\nexport enum DriverExperience {  Zero = 'Zero',\r\n  One = 'One',\r\n  Two = 'Two',\r\n  Three = 'Three',\r\n  Four = 'Four',\r\n  Unknown = 'Unknown',\r\n}\r\n\r\nexport enum Stability {  NO = 'Not Stable',\r\n  YES = 'Stable',\r\n  VERY_STABLE = 'Very Stable',\r\n}\r\n\r\n\r\n// Create an initial state object that matches the PitModel interface\r\nexport const initialPitData: PitModel = {  RobScout: \"\",\r\n  TeamNb: 0, \r\n  RobTeamNm: \"\",\r\n  RobDrive: DriveBaseType.Other, // Default value as 'Other'\r\n  RobMotor: DriveBaseMotor.CIM, // Default value as 'CIM'\r\n  RobDriveExp: DriverExperience.Zero, // Default as 'Zero'\r\n  RobWtlbs: 0,\r\n  RobWidth: 0,\r\n  RobLength: 0,\r\n  RobStble: Stability.NO, // Default as 'NO'\r\n  RobQuest1: false,\r\n  RobQuest2: false,\r\n  RobQuest3: false,\r\n  RobQuest4: false,\r\n  RobQuest5: false,\r\n  RobQuest6: false,\r\n  RobQuest7: false,\r\n  RobQuest8: false,\r\n  RobQuest9: false,\r\n  RobQuest10: false,\r\n  RobQuest11: false,\r\n  RobQuest12: false,\r\n  RobQuest13: false,\r\n  RobQuest14: false,\r\n  RobQuest15: false,\r\n  RobComm1: \"\",\r\n  gotScanned: false,\r\n\r\n};"],"mappings":"AAgCA,WAAYA,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAMzB,WAAYC,cAAc,aAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAM1B,WAAYC,gBAAgB,aAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;AAQ5B,WAAYC,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAOrB,OAAO,IAAMC,cAAwB,GAAG;EAAGC,QAAQ,EAAE,EAAE;EACrDC,MAAM,EAAE,CAAC;EACTC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAER,aAAa,CAACS,KAAK;EAC7BC,QAAQ,EAAET,cAAc,CAACU,GAAG;EAC5BC,WAAW,EAAEV,gBAAgB,CAACW,IAAI;EAClCC,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAEd,SAAS,CAACe,EAAE;EACtBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE;AAEd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}