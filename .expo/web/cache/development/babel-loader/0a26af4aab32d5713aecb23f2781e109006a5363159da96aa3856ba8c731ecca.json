{"ast":null,"code":"export var DriveBaseType = function (DriveBaseType) {\n  DriveBaseType[\"Swerve\"] = \"Swerve\";\n  DriveBaseType[\"Tank\"] = \"Tank\";\n  DriveBaseType[\"Other\"] = \"Other\";\n  return DriveBaseType;\n}({});\nexport var DriveBaseMotor = function (DriveBaseMotor) {\n  DriveBaseMotor[\"CIM\"] = \"CIM\";\n  DriveBaseMotor[\"NEO\"] = \"NEO\";\n  DriveBaseMotor[\"FALCON\"] = \"FALCON\";\n  DriveBaseMotor[\"KRAKEN\"] = \"KRAKEN\";\n  return DriveBaseMotor;\n}({});\nexport var Years = function (Years) {\n  Years[\"Zero\"] = \"0\";\n  Years[\"One\"] = \"1\";\n  Years[\"Two\"] = \"2\";\n  Years[\"ThreePlus\"] = \"3+\";\n  Years[\"Unknown\"] = \"Unknown\";\n  return Years;\n}({});\nexport var Stability = function (Stability) {\n  Stability[\"NotStable\"] = \"Not Stable\";\n  Stability[\"Stable\"] = \"Stable\";\n  Stability[\"VeryStable\"] = \"Very Stable\";\n  return Stability;\n}({});\nexport var WellMade = function (WellMade) {\n  WellMade[\"No\"] = \"No\";\n  WellMade[\"Yes\"] = \"Yes\";\n  WellMade[\"Very\"] = \"Very\";\n  return WellMade;\n}({});\nexport var PickupSpots = function (PickupSpots) {\n  PickupSpots[\"SourceOnly\"] = \"Source Only\";\n  PickupSpots[\"GroundOnly\"] = \"Ground Only\";\n  PickupSpots[\"Both\"] = \"Both\";\n  PickupSpots[\"Neither\"] = \"Neither\";\n  return PickupSpots;\n}({});\nexport var ScoreSpots = function (ScoreSpots) {\n  ScoreSpots[\"SpeakerOnly\"] = \"Speaker Only\";\n  ScoreSpots[\"AmpOnly\"] = \"Amp Only\";\n  ScoreSpots[\"Both\"] = \"Both\";\n  ScoreSpots[\"Neither\"] = \"Neither\";\n  return ScoreSpots;\n}({});\nexport var Gravity = function (Gravity) {\n  Gravity[\"Low\"] = \"Low\";\n  Gravity[\"Medium\"] = \"Medium\";\n  Gravity[\"High\"] = \"High\";\n  return Gravity;\n}({});\nexport var ShootSpots = function (ShootSpots) {\n  ShootSpots[\"StartingZone\"] = \"Starting Zone\";\n  ShootSpots[\"Podium\"] = \"Podium\";\n  ShootSpots[\"ElsewhereInWing\"] = \"Elsewhere in Wing\";\n  ShootSpots[\"NearCentreLine\"] = \"Near Centre Line\";\n  ShootSpots[\"None\"] = \"None\";\n  return ShootSpots;\n}({});\nexport var HumanPlayerSpotlight = function (HumanPlayerSpotlight) {\n  HumanPlayerSpotlight[\"OneOfThree\"] = \"1 of 3 High Notes\";\n  HumanPlayerSpotlight[\"TwoOfThree\"] = \"2 of 3 High Notes\";\n  HumanPlayerSpotlight[\"AllHighNotes\"] = \"3 of 3 High Notes\";\n  return HumanPlayerSpotlight;\n}({});\nexport var initialPitData = {\n  ScoutName: \"\",\n  TeamNumber: 0,\n  TeamName: \"\",\n  DriveBaseType: DriveBaseType.Other,\n  DriveBaseMotor: DriveBaseMotor.CIM,\n  DriverExperience: Years.Zero,\n  WeightLbs: 0,\n  WidthInches: 0,\n  LengthInches: 0,\n  Stability: Stability.NotStable,\n  WellMade: WellMade.No,\n  SingleIntakeShooter: false,\n  PickupSpots: PickupSpots.Neither,\n  ScoreSpots: ScoreSpots.Neither,\n  CenterOfGravity: Gravity.Low,\n  YearsUsingSwerve: Years.Zero,\n  ShootsFrom: ShootSpots.None,\n  ObjectRecognition: false,\n  ReadAprilTags: false,\n  AutonomousProgram: false,\n  AutoProgramsForSpeaker: false,\n  CanGetOnStage: false,\n  CanScoreNotesInTrap: false,\n  HumanPlayerSpotlight: HumanPlayerSpotlight.OneOfThree,\n  CheesecakeAbility: false,\n  Comments: \"\",\n  HeightInches: 0,\n  FrameClearanceInches: 0,\n  matches: []\n};","map":{"version":3,"names":["DriveBaseType","DriveBaseMotor","Years","Stability","WellMade","PickupSpots","ScoreSpots","Gravity","ShootSpots","HumanPlayerSpotlight","initialPitData","ScoutName","TeamNumber","TeamName","Other","CIM","DriverExperience","Zero","WeightLbs","WidthInches","LengthInches","NotStable","No","SingleIntakeShooter","Neither","CenterOfGravity","Low","YearsUsingSwerve","ShootsFrom","None","ObjectRecognition","ReadAprilTags","AutonomousProgram","AutoProgramsForSpeaker","CanGetOnStage","CanScoreNotesInTrap","OneOfThree","CheesecakeAbility","Comments","HeightInches","FrameClearanceInches","matches"],"sources":["C:/Users/Noril/Documents/TechScout/Models/PitModel.ts"],"sourcesContent":["import { MatchModel } from './MatchModel';\r\nexport interface PitModel {\r\n  //General Info\r\n  ScoutName: string;\r\n  TeamNumber: number;\r\n  TeamName: string;\r\n  //Robot Specs\r\n  DriveBaseType: DriveBaseType;\r\n  DriveBaseMotor: DriveBaseMotor;\r\n  DriverExperience: Years;\r\n  WeightLbs: number;\r\n  WidthInches: number;\r\n  LengthInches: number;\r\n  Stability: Stability;\r\n  //Robot Capabilities\r\n  WellMade: WellMade;\r\n  SingleIntakeShooter: boolean; // Boolean for single intake and shooter\r\n  PickupSpots: PickupSpots;\r\n  ScoreSpots: ScoreSpots;\r\n  CenterOfGravity: Gravity;\r\n  YearsUsingSwerve: Years;\r\n  ShootsFrom: ShootSpots; // Adding ShootsFrom as an enum\r\n  ObjectRecognition: boolean;\r\n  ReadAprilTags: boolean;\r\n  AutonomousProgram: boolean;\r\n  AutoProgramsForSpeaker: boolean;\r\n  CanGetOnStage: boolean;\r\n  CanScoreNotesInTrap: boolean;\r\n  HumanPlayerSpotlight: HumanPlayerSpotlight;\r\n  CheesecakeAbility: boolean; // Boolean for robot's lifting ability\r\n  Comments?: string;\r\n  HeightInches: number;\r\n  FrameClearanceInches: number;\r\n  matches?: MatchModel[];\r\n}\r\n\r\n// Enums for dropdowns\r\nexport enum DriveBaseType {\r\n  Swerve = \"Swerve\",\r\n  Tank = \"Tank\",\r\n  Other = \"Other\",\r\n}\r\n\r\nexport enum DriveBaseMotor {\r\n  CIM = \"CIM\",\r\n  NEO = \"NEO\",\r\n  FALCON = \"FALCON\",\r\n  KRAKEN = \"KRAKEN\",\r\n}\r\n\r\nexport enum Years {\r\n  Zero = \"0\",\r\n  One = \"1\",\r\n  Two = \"2\",\r\n  ThreePlus = \"3+\",\r\n  Unknown = \"Unknown\",\r\n}\r\n\r\nexport enum Stability {\r\n  NotStable = \"Not Stable\",\r\n  Stable = \"Stable\",\r\n  VeryStable = \"Very Stable\",\r\n}\r\n\r\nexport enum WellMade {\r\n  No = \"No\",\r\n  Yes = \"Yes\",\r\n  Very = \"Very\",\r\n}\r\n\r\nexport enum PickupSpots {\r\n  SourceOnly = \"Source Only\",\r\n  GroundOnly = \"Ground Only\",\r\n  Both = \"Both\",\r\n  Neither = \"Neither\",\r\n}\r\n\r\nexport enum ScoreSpots {\r\n  SpeakerOnly = 'Speaker Only',\r\n  AmpOnly = \"Amp Only\",\r\n  Both = \"Both\",\r\n  Neither = \"Neither\",\r\n}\r\n\r\nexport enum Gravity {\r\n  Low = \"Low\",\r\n  Medium = \"Medium\",\r\n  High = \"High\",\r\n}\r\n\r\nexport enum ShootSpots {\r\n  StartingZone = \"Starting Zone\",\r\n  Podium = \"Podium\",\r\n  ElsewhereInWing = \"Elsewhere in Wing\",\r\n  NearCentreLine = \"Near Centre Line\",\r\n  None = \"None\",\r\n}\r\n\r\nexport enum HumanPlayerSpotlight {\r\n  OneOfThree = \"1 of 3 High Notes\",\r\n  TwoOfThree = \"2 of 3 High Notes\",\r\n  AllHighNotes = \"3 of 3 High Notes\",\r\n}\r\n\r\n\r\n\r\n// Create an initial state object that matches the PitModel interface\r\nexport const initialPitData: PitModel = {  \r\n  ScoutName: \"\",\r\n  TeamNumber: 0,\r\n  TeamName: \"\",\r\n  DriveBaseType: DriveBaseType.Other,\r\n  DriveBaseMotor: DriveBaseMotor.CIM,\r\n  DriverExperience: Years.Zero,\r\n  WeightLbs: 0,\r\n  WidthInches: 0,\r\n  LengthInches: 0,\r\n  Stability: Stability.NotStable,\r\n  WellMade: WellMade.No,\r\n  SingleIntakeShooter: false,\r\n  PickupSpots: PickupSpots.Neither,\r\n  ScoreSpots: ScoreSpots.Neither,\r\n  CenterOfGravity: Gravity.Low,\r\n  YearsUsingSwerve: Years.Zero,\r\n  ShootsFrom: ShootSpots.None,\r\n  ObjectRecognition: false,\r\n  ReadAprilTags: false,\r\n  AutonomousProgram: false,\r\n  AutoProgramsForSpeaker: false,\r\n  CanGetOnStage: false,\r\n  CanScoreNotesInTrap: false,\r\n  HumanPlayerSpotlight: HumanPlayerSpotlight.OneOfThree,\r\n  CheesecakeAbility: false,\r\n  Comments: \"\",\r\n  HeightInches: 0,\r\n  FrameClearanceInches: 0,\r\n  matches: [],\r\n\r\n};"],"mappings":"AAqCA,WAAYA,aAAa,aAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAMzB,WAAYC,cAAc,aAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;AAO1B,WAAYC,KAAK,aAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAQjB,WAAYC,SAAS,aAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAMrB,WAAYC,QAAQ,aAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAMpB,WAAYC,WAAW,aAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAOvB,WAAYC,UAAU,aAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAOtB,WAAYC,OAAO,aAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAA,OAAPA,OAAO;AAAA;AAMnB,WAAYC,UAAU,aAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAQtB,WAAYC,oBAAoB,aAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAAA,OAApBA,oBAAoB;AAAA;AAShC,OAAO,IAAMC,cAAwB,GAAG;EACtCC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAE,EAAE;EACZb,aAAa,EAAEA,aAAa,CAACc,KAAK;EAClCb,cAAc,EAAEA,cAAc,CAACc,GAAG;EAClCC,gBAAgB,EAAEd,KAAK,CAACe,IAAI;EAC5BC,SAAS,EAAE,CAAC;EACZC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;EACfjB,SAAS,EAAEA,SAAS,CAACkB,SAAS;EAC9BjB,QAAQ,EAAEA,QAAQ,CAACkB,EAAE;EACrBC,mBAAmB,EAAE,KAAK;EAC1BlB,WAAW,EAAEA,WAAW,CAACmB,OAAO;EAChClB,UAAU,EAAEA,UAAU,CAACkB,OAAO;EAC9BC,eAAe,EAAElB,OAAO,CAACmB,GAAG;EAC5BC,gBAAgB,EAAEzB,KAAK,CAACe,IAAI;EAC5BW,UAAU,EAAEpB,UAAU,CAACqB,IAAI;EAC3BC,iBAAiB,EAAE,KAAK;EACxBC,aAAa,EAAE,KAAK;EACpBC,iBAAiB,EAAE,KAAK;EACxBC,sBAAsB,EAAE,KAAK;EAC7BC,aAAa,EAAE,KAAK;EACpBC,mBAAmB,EAAE,KAAK;EAC1B1B,oBAAoB,EAAEA,oBAAoB,CAAC2B,UAAU;EACrDC,iBAAiB,EAAE,KAAK;EACxBC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE,CAAC;EACfC,oBAAoB,EAAE,CAAC;EACvBC,OAAO,EAAE;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}