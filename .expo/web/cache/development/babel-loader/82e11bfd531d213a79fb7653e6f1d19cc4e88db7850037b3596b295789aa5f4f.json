{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ProgressSteps, ProgressStep } from \"react-native-progress-steps\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { SaveMatchData } from \"../logic/MatchLogic.js\";\nimport { loadMatchCount } from \"../logic/TeamLogic.js\";\nimport * as MatchModel from \"../Models/MatchModel\";\nimport { InputField, ToggleSwitch, DropDownSelector, Timer, Grid, Counter } from \"./ReusableStuff.js\";\nimport { validateEmptyField } from \"../logic/ValidationLogic.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Matches(_ref) {\n  var route = _ref.route;\n  var currentTeamNumber = route.params.currentTeamNumber;\n  var _useState = useState(MatchModel.initialMatchData),\n    _useState2 = _slicedToArray(_useState, 2),\n    newMatchData = _useState2[0],\n    setNewMatchData = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    matchCount = _useState4[0],\n    setMatchCount = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentStep = _useState6[0],\n    setCurrentStep = _useState6[1];\n  useEffect(function () {\n    var loadMatchDataOnMount = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        setMatchCount(yield loadMatchCount(currentTeamNumber));\n      });\n      return function loadMatchDataOnMount() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadMatchDataOnMount();\n    console.log(newMatchData);\n  }, []);\n  var setField = function setField(field, value) {\n    setNewMatchData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var setNumericField = function setNumericField(field, value) {\n    var numericValue = value === \"\" ? \"\" : parseInt(value, 10);\n    setNewMatchData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, numericValue));\n    });\n  };\n  var setEnumField = function setEnumField(field, value) {\n    setNewMatchData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var setBooleanField = function setBooleanField(field, value) {\n    setNewMatchData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var setArrayField = function setArrayField(key, item) {\n    setNewMatchData(function (prevData) {\n      var _prevData$key;\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, key, [].concat(_toConsumableArray((_prevData$key = prevData == null ? void 0 : prevData[key]) != null ? _prevData$key : []), [item])));\n    });\n  };\n  var content = function content(_ref3) {\n    var data = _ref3.data;\n    return _jsx(FlatList, {\n      scrollEnabled: false,\n      style: styles.container,\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.key;\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsxs(View, {\n          children: [item.type === \"text\" && _jsx(InputField, {\n            label: item.label,\n            value: item.value,\n            onChange: function onChange(text) {\n              return setField(item.key, text);\n            },\n            keyboardType: \"default\"\n          }), item.type === \"number\" && _jsx(InputField, {\n            label: item.label,\n            value: item.value.toString(),\n            onChange: function onChange(text) {\n              return setNumericField(item.key, text);\n            },\n            keyboardType: \"numeric\"\n          }), item.type === \"boolean\" && _jsx(ToggleSwitch, {\n            label: item.label,\n            value: item.value,\n            onToggle: function onToggle(newValue) {\n              return setBooleanField(item.key, newValue);\n            }\n          }), item.type === \"dropdown\" && _jsx(DropDownSelector, {\n            label: item.label,\n            value: item.value,\n            items: item.droptype,\n            setValue: function setValue(text) {\n              return setEnumField(item.key, text);\n            }\n          }), item.type === \"timer\" && _jsx(Timer, {\n            setValue: function setValue(text) {\n              return setArrayField(item.key, text);\n            },\n            dropPiece: function dropPiece() {\n              return setNumericField(\"DroppedGamePiece\", newMatchData.DroppedGamePiece + 1);\n            }\n          }), item.type === \"counter\" && _jsx(Counter, {\n            label: item.label,\n            value: item.value,\n            onToggle: function onToggle() {\n              return setNumericField(item.key, item.value + 1);\n            },\n            OnNegToggle: function OnNegToggle() {\n              return setNumericField(item.key, item.value - 1);\n            }\n          }), item.type === \"grid\" && _jsx(Grid, {\n            rows: 3,\n            columns: 3\n          })]\n        }, item.key);\n      }\n    });\n  };\n  function handleSaveMatchData() {\n    return _handleSaveMatchData.apply(this, arguments);\n  }\n  function _handleSaveMatchData() {\n    _handleSaveMatchData = _asyncToGenerator(function* () {\n      try {\n        setCurrentStep(0);\n        var validationFields = [{\n          field: \"ScoutName\",\n          value: newMatchData.ScoutName\n        }];\n        var validationResults = yield Promise.all(validationFields.map(function () {\n          var _ref6 = _asyncToGenerator(function* (_ref5) {\n            var field = _ref5.field,\n              value = _ref5.value;\n            return _objectSpread({\n              field: field\n            }, yield validateEmptyField(field, value));\n          });\n          return function (_x) {\n            return _ref6.apply(this, arguments);\n          };\n        }()));\n        var failedValidation = validationResults.find(function (result) {\n          return !result.isValid;\n        });\n        if (failedValidation) {\n          alert(failedValidation.errorMessage);\n        } else {\n          setField(\"TeamNumber\", currentTeamNumber);\n          var saveSuccess = yield SaveMatchData(newMatchData, currentTeamNumber, matchCount);\n          if (saveSuccess) {\n            setMatchCount(matchCount + 1);\n          }\n        }\n      } catch (validationFailed) {\n        console.error(validationFailed);\n      }\n    });\n    return _handleSaveMatchData.apply(this, arguments);\n  }\n  function generateEnumItems(enumObject) {\n    return Object.keys(enumObject).map(function (key) {\n      return {\n        label: enumObject[key],\n        value: enumObject[key]\n      };\n    });\n  }\n  var PositionTypeItem = generateEnumItems(MatchModel.Position);\n  var extraNotesItem = generateEnumItems(MatchModel.ExtraNotes);\n  var ShootSpotsItem = generateEnumItems(MatchModel.ShootSpots);\n  var EndGameOnStageItem = generateEnumItems(MatchModel.EndGameOnStage);\n  var EndGameHarmonyItem = generateEnumItems(MatchModel.EndGameHarmony);\n  var TrapTypeItem = generateEnumItems(MatchModel.Trap);\n  var RankingPointsItem = generateEnumItems(MatchModel.RankingPoints);\n  var DefenseLevelItem = generateEnumItems(MatchModel.DefenseLevel);\n  var TippinessItem = generateEnumItems(MatchModel.Tippiness);\n  var SpeedItem = generateEnumItems(MatchModel.Speed);\n  var AwareTypeItem = generateEnumItems(MatchModel.Awareness);\n  var EndGameTrapITem = generateEnumItems(MatchModel.TrapEndGame);\n  var InfoData = [{\n    label: \"Scout Name\",\n    key: \"ScoutName\",\n    value: newMatchData.ScoutName,\n    type: \"text\"\n  }, {\n    label: \"Match Number\",\n    key: \"MatchNumber\",\n    value: newMatchData.MatchNumber.toString(),\n    type: \"number\"\n  }];\n  var AutoData = [{\n    label: \"Starting Position\",\n    key: \"AutoStartingPosition\",\n    value: newMatchData.AutoStartingPosition,\n    type: \"dropdown\",\n    droptype: PositionTypeItem\n  }, {\n    label: \"Auto Leave\",\n    key: \"AutoLeave\",\n    value: newMatchData.AutoLeave,\n    type: \"boolean\"\n  }, {\n    label: \"Amplifier\",\n    key: \"AutoAmp\",\n    value: newMatchData.AutoAmp,\n    type: \"counter\"\n  }, {\n    label: \"Speaker\",\n    key: \"AutoSpeaker\",\n    value: newMatchData.AutoSpeaker,\n    type: \"counter\"\n  }, {\n    label: \"Extra Notes\",\n    key: \"AutoExtraNotes\",\n    value: newMatchData.AutoExtraNotes,\n    type: \"dropdown\",\n    droptype: extraNotesItem\n  }, {\n    label: \"Dropped Game Pieces\",\n    key: \"AutoDropped\",\n    value: newMatchData.AutoDropped,\n    type: \"number\"\n  }, {\n    label: \"A-StopPressed?\",\n    key: \"AutoAStopPressed\",\n    value: newMatchData.AutoAStopPressed,\n    type: \"boolean\"\n  }, {\n    label: \"Incapacitated in auto?\",\n    key: \"AutoIncapacitated\",\n    value: newMatchData.AutoIncapacitated,\n    type: \"boolean\"\n  }, {\n    label: \"Fell in auto?\",\n    key: \"AutoRobotFalls\",\n    value: newMatchData.AutoRobotFalls,\n    type: \"boolean\"\n  }, {\n    label: \"Robot Did Not Play\",\n    key: \"AutoRobotDidNotPlay\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"boolean\"\n  }];\n  var TeleopData = [{\n    label: \"Speaker Amplified\",\n    key: \"TeleopSpeakerAmplified\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"number\"\n  }, {\n    label: \"Teleop Speaker\",\n    key: \"TeleopSpeaker\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"number\"\n  }, {\n    label: \"Teleop Amplifier\",\n    key: \"TeleopAmplifier\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"number\"\n  }, {\n    label: \"Teleop Cycle Time\",\n    key: \"TeleopCycleTime\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"timer\"\n  }, {\n    label: \"Teleop Dropped\",\n    key: \"TeleopDropped\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"number\"\n  }, {\n    label: \"Teleop Trap\",\n    key: \"TeleopTrap\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"dropdown\",\n    droptype: TrapTypeItem\n  }, {\n    label: \"Fell in teleop?\",\n    key: \"TeleopFell\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"boolean\"\n  }, {\n    label: \"Incapacitated in Teleop\",\n    key: \"TeleopIncapacitated\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"boolean\"\n  }, {\n    label: \"Teleop Game Piece Stuck\",\n    key: \"TeleopGamePieceStuck\",\n    value: newMatchData.TeleopGamePieceStuck,\n    type: \"counter\"\n  }, {\n    label: \"Teleop Shoots From\",\n    key: \"TeleopShootsFrom\",\n    value: newMatchData.AutoRobotDidNotPlay,\n    type: \"dropdown\",\n    droptype: ShootSpotsItem\n  }, {\n    label: \"Teleop Under Stage\",\n    key: \"TeleopUnderStage\",\n    value: newMatchData.TeleopUnderStage,\n    type: \"boolean\"\n  }];\n  var EndGameData = [{\n    label: \"End Game On Stage\",\n    key: \"EndGameOnStage\",\n    value: newMatchData.EndGameOnStage,\n    type: \"dropdown\",\n    droptype: EndGameOnStageItem\n  }, {\n    label: \"End Game Harmony\",\n    key: \"EndGameHarmony\",\n    value: newMatchData.EndGameHarmony,\n    type: \"dropdown\",\n    droptype: EndGameHarmonyItem\n  }, {\n    label: \"End Game Trap\",\n    key: \"EndGameTrap\",\n    value: newMatchData.EndGameTrap,\n    type: \"dropdown\",\n    droptype: EndGameTrapITem\n  }, {\n    label: \"End Game Robot Fell\",\n    key: \"EndGameRobotFell\",\n    value: newMatchData.EndGameRobotFell,\n    type: \"boolean\"\n  }, {\n    label: \"End Game Robot Incapacitated\",\n    key: \"EndGameRobotIncapacitated\",\n    value: newMatchData.EndGameRobotIncapacitated,\n    type: \"boolean\"\n  }, {\n    label: \"End Game Spotlit\",\n    key: \"EndGameSpotLighted\",\n    value: newMatchData.EndGameSpotLighted,\n    type: \"boolean\"\n  }];\n  var PerformanceData = [{\n    label: \"Total Points Alliance\",\n    key: \"AllianceTotalPoints\",\n    value: newMatchData.AllianceTotalPoints,\n    type: \"number\"\n  }, {\n    label: \"Alliance Game Status\",\n    key: \"AllianceRankingPoints\",\n    value: newMatchData.AllianceRankingPoints,\n    type: \"dropdown\",\n    droptype: RankingPointsItem\n  }, {\n    label: \"Alliance Melody\",\n    key: \"AllianceMelody\",\n    value: newMatchData.AllianceMelody,\n    type: \"boolean\"\n  }, {\n    label: \"Alliance Coopertition\",\n    key: \"AllianceCoopertition\",\n    value: newMatchData.AllianceCoopertition,\n    type: \"boolean\"\n  }, {\n    label: \"Alliance Ensemble\",\n    key: \"AllianceEnsemble\",\n    value: newMatchData.AllianceEnsemble,\n    type: \"boolean\"\n  }, {\n    label: \"Plays Defense?\",\n    key: \"PlaysDefense\",\n    value: newMatchData.PlaysDefense,\n    type: \"dropdown\",\n    droptype: DefenseLevelItem\n  }, {\n    label: \"Is robot tippy?\",\n    key: \"RobotTippy\",\n    value: newMatchData.RobotTippy,\n    type: \"dropdown\",\n    droptype: TippinessItem\n  }, {\n    label: \"Is robot fast?\",\n    key: \"RobotSpeed\",\n    value: newMatchData.RobotSpeed,\n    type: \"dropdown\",\n    droptype: SpeedItem\n  }, {\n    label: \"Field Awareness\",\n    key: \"FieldAwareness\",\n    value: newMatchData.FieldAwareness,\n    type: \"dropdown\",\n    droptype: AwareTypeItem\n  }, {\n    label: \"Comment\",\n    key: \"Comment\",\n    value: newMatchData.TotalPointsAlliance,\n    type: \"text\"\n  }];\n  var buttonTextStyle = {\n    color: \"#686868\",\n    fontWeight: \"bold\"\n  };\n  var handleScroll = function handleScroll() {\n    Keyboard.dismiss();\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    onStartShouldSetResponderCapture: handleScroll,\n    children: _jsxs(ProgressSteps, {\n      completedProgressBarColor: \"#1E1E1E\",\n      activeStepIconBorderColor: \"#1E1E1E\",\n      completedStepIconColor: \"#1E1E1E\",\n      activeStepIconColor: \"#F6EB14\",\n      activeLabelColor: \"#1E1E1E\",\n      completedCheckColor: \"#F6EB14\",\n      children: [_jsx(ProgressStep, {\n        label: \"Info\",\n        nextBtnTextStyle: buttonTextStyle,\n        previousBtnTextStyle: buttonTextStyle,\n        children: _jsx(View, {\n          children: content({\n            data: InfoData\n          })\n        })\n      }), _jsx(ProgressStep, {\n        label: \"Auto\",\n        nextBtnTextStyle: buttonTextStyle,\n        previousBtnTextStyle: buttonTextStyle,\n        children: _jsx(View, {\n          style: {},\n          children: _jsx(View, {\n            children: content({\n              data: AutoData\n            })\n          })\n        })\n      }), _jsx(ProgressStep, {\n        label: \"Teleop\",\n        nextBtnTextStyle: buttonTextStyle,\n        previousBtnTextStyle: buttonTextStyle,\n        children: _jsx(View, {\n          style: {},\n          children: _jsx(View, {\n            children: content({\n              data: TeleopData\n            })\n          })\n        })\n      }), _jsx(ProgressStep, {\n        label: \"EndGame\",\n        scrollViewProps: this.defaultScrollViewProps,\n        nextBtnTextStyle: buttonTextStyle,\n        previousBtnTextStyle: buttonTextStyle,\n        children: _jsx(View, {\n          style: {},\n          children: _jsx(View, {\n            children: content({\n              data: EndGameData\n            })\n          })\n        })\n      }), _jsx(ProgressStep, {\n        label: \"Results\",\n        onSubmit: handleSaveMatchData,\n        nextBtnTextStyle: buttonTextStyle,\n        previousBtnTextStyle: buttonTextStyle,\n        children: _jsx(View, {\n          style: {},\n          children: _jsx(View, {\n            children: content({\n              data: PerformanceData\n            })\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  headerContainer: {\n    alignItems: \"center\",\n    marginVertical: 10\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  saveButton: {\n    backgroundColor: \"#F6EB14\",\n    borderRadius: 10,\n    padding: 15,\n    alignItems: \"center\"\n  },\n  label: {\n    width: 100,\n    marginRight: 10\n  }\n});\nexport default Matches;","map":{"version":3,"names":["ProgressSteps","ProgressStep","React","useState","useEffect","View","StyleSheet","FlatList","Keyboard","SaveMatchData","loadMatchCount","MatchModel","InputField","ToggleSwitch","DropDownSelector","Timer","Grid","Counter","validateEmptyField","jsx","_jsx","jsxs","_jsxs","Matches","_ref","route","currentTeamNumber","params","_useState","initialMatchData","_useState2","_slicedToArray","newMatchData","setNewMatchData","_useState3","_useState4","matchCount","setMatchCount","_useState5","_useState6","currentStep","setCurrentStep","loadMatchDataOnMount","_ref2","_asyncToGenerator","apply","arguments","console","log","setField","field","value","prevData","_objectSpread","_defineProperty","setNumericField","numericValue","parseInt","setEnumField","setBooleanField","setArrayField","key","item","_prevData$key","concat","_toConsumableArray","content","_ref3","data","scrollEnabled","style","styles","container","keyExtractor","renderItem","_ref4","children","type","label","onChange","text","keyboardType","toString","onToggle","newValue","items","droptype","setValue","dropPiece","DroppedGamePiece","OnNegToggle","rows","columns","handleSaveMatchData","_handleSaveMatchData","validationFields","ScoutName","validationResults","Promise","all","map","_ref6","_ref5","_x","failedValidation","find","result","isValid","alert","errorMessage","saveSuccess","validationFailed","error","generateEnumItems","enumObject","Object","keys","PositionTypeItem","Position","extraNotesItem","ExtraNotes","ShootSpotsItem","ShootSpots","EndGameOnStageItem","EndGameOnStage","EndGameHarmonyItem","EndGameHarmony","TrapTypeItem","Trap","RankingPointsItem","RankingPoints","DefenseLevelItem","DefenseLevel","TippinessItem","Tippiness","SpeedItem","Speed","AwareTypeItem","Awareness","EndGameTrapITem","TrapEndGame","InfoData","MatchNumber","AutoData","AutoStartingPosition","AutoLeave","AutoAmp","AutoSpeaker","AutoExtraNotes","AutoDropped","AutoAStopPressed","AutoIncapacitated","AutoRobotFalls","AutoRobotDidNotPlay","TeleopData","TeleopGamePieceStuck","TeleopUnderStage","EndGameData","EndGameTrap","EndGameRobotFell","EndGameRobotIncapacitated","EndGameSpotLighted","PerformanceData","AllianceTotalPoints","AllianceRankingPoints","AllianceMelody","AllianceCoopertition","AllianceEnsemble","PlaysDefense","RobotTippy","RobotSpeed","FieldAwareness","TotalPointsAlliance","buttonTextStyle","color","fontWeight","handleScroll","dismiss","flex","onStartShouldSetResponderCapture","completedProgressBarColor","activeStepIconBorderColor","completedStepIconColor","activeStepIconColor","activeLabelColor","completedCheckColor","nextBtnTextStyle","previousBtnTextStyle","scrollViewProps","defaultScrollViewProps","onSubmit","create","headerContainer","alignItems","marginVertical","headerText","fontSize","saveButton","backgroundColor","borderRadius","padding","width","marginRight"],"sources":["C:/Users/Noril/Documents/TechScout/screens/Matches.js"],"sourcesContent":["import { ProgressSteps, ProgressStep } from \"react-native-progress-steps\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, FlatList, Keyboard } from \"react-native\";\r\nimport { SaveMatchData } from \"../logic/MatchLogic.js\";\r\nimport { loadMatchCount } from \"../logic/TeamLogic.js\";\r\nimport * as MatchModel from \"../Models/MatchModel\";\r\n\r\nimport {\r\n  InputField,\r\n  ToggleSwitch,\r\n  DropDownSelector,\r\n  Timer,\r\n  Grid,\r\n  Counter,\r\n} from \"./ReusableStuff.js\";\r\nimport { validateEmptyField } from \"../logic/ValidationLogic.js\";\r\n\r\nfunction Matches({ route }) {\r\n  const { currentTeamNumber } = route.params;\r\n  const [newMatchData, setNewMatchData] = useState(MatchModel.initialMatchData);\r\n  const [matchCount, setMatchCount] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const loadMatchDataOnMount = async () => {\r\n      setMatchCount(await loadMatchCount(currentTeamNumber));\r\n    };\r\n    loadMatchDataOnMount();\r\n    console.log(newMatchData);\r\n  }, []);\r\n\r\n  const setField = (field, value) => {\r\n    setNewMatchData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const setNumericField = (field, value) => {\r\n    const numericValue = value === \"\" ? \"\" : parseInt(value, 10);\r\n\r\n    setNewMatchData((prevData) => ({\r\n      ...prevData,\r\n      [field]: numericValue,\r\n    }));\r\n  };\r\n\r\n  const setEnumField = (field, value) => {\r\n    setNewMatchData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const setBooleanField = (field, value) => {\r\n    setNewMatchData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const setArrayField = (key, item) => {\r\n    setNewMatchData((prevData) => ({\r\n      ...prevData,\r\n      [key]: [...(prevData?.[key] ?? []), item],\r\n    }));\r\n  };\r\n\r\n  const content = ({ data }) => {\r\n    return (\r\n      <FlatList\r\n        scrollEnabled={false}\r\n        style={styles.container}\r\n        data={data}\r\n        keyExtractor={(item) => item.key}\r\n        renderItem={({ item }) => (\r\n          <View key={item.key}>\r\n            {item.type === \"text\" && (\r\n              <InputField\r\n                label={item.label}\r\n                value={item.value}\r\n                onChange={(text) => setField(item.key, text)}\r\n                keyboardType=\"default\"\r\n              />\r\n            )}\r\n            {item.type === \"number\" && (\r\n              <InputField\r\n                label={item.label}\r\n                value={item.value.toString()}\r\n                onChange={(text) => setNumericField(item.key, text)}\r\n                keyboardType=\"numeric\"\r\n              />\r\n            )}\r\n            {item.type === \"boolean\" && (\r\n              <ToggleSwitch\r\n                label={item.label}\r\n                value={item.value}\r\n                onToggle={(newValue) => setBooleanField(item.key, newValue)}\r\n              />\r\n            )}\r\n            {item.type === \"dropdown\" && (\r\n              <DropDownSelector\r\n                label={item.label}\r\n                value={item.value}\r\n                items={item.droptype}\r\n                setValue={(text) => setEnumField(item.key, text)}\r\n              />\r\n            )}\r\n            {item.type === \"timer\" && (\r\n              <Timer\r\n                setValue={(text) => setArrayField(item.key, text)}\r\n                dropPiece={() =>\r\n                  setNumericField(\r\n                    \"DroppedGamePiece\",\r\n                    newMatchData.DroppedGamePiece + 1\r\n                  )\r\n                }\r\n              />\r\n            )}\r\n            {item.type === \"counter\" && (\r\n              <Counter\r\n                label={item.label}\r\n                value={item.value}\r\n                onToggle={() => setNumericField(item.key, item.value + 1)}\r\n                OnNegToggle={() => setNumericField(item.key, item.value - 1)}\r\n              />\r\n            )}\r\n            {item.type === \"grid\" && <Grid rows={3} columns={3} />}\r\n          </View>\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  async function handleSaveMatchData() {\r\n    try {\r\n      setCurrentStep(0);\r\n      // on peut ajouter des fields si necessaire\r\n      const validationFields = [\r\n        { field: \"ScoutName\", value: newMatchData.ScoutName },\r\n      ];\r\n\r\n      const validationResults = await Promise.all(\r\n        validationFields.map(async ({ field, value }) => {\r\n          return { field, ...(await validateEmptyField(field, value)) };\r\n        })\r\n      );\r\n\r\n      const failedValidation = validationResults.find(\r\n        (result) => !result.isValid\r\n      );\r\n\r\n      if (failedValidation) {\r\n        alert(failedValidation.errorMessage);\r\n      } else {\r\n        setField(\"TeamNumber\", currentTeamNumber);\r\n        const saveSuccess = await SaveMatchData(\r\n          newMatchData,\r\n          currentTeamNumber,\r\n          matchCount\r\n        );\r\n\r\n        if (saveSuccess) {\r\n          setMatchCount(matchCount + 1);\r\n        }\r\n      }\r\n    } catch (validationFailed) {\r\n      console.error(validationFailed);\r\n    }\r\n  }\r\n  function generateEnumItems(enumObject) {\r\n    return Object.keys(enumObject).map((key) => ({\r\n      label: enumObject[key],\r\n      value: enumObject[key],\r\n    }));\r\n  }\r\n\r\n  const PositionTypeItem = generateEnumItems(MatchModel.Position);\r\n  const extraNotesItem = generateEnumItems(MatchModel.ExtraNotes);\r\n  const ShootSpotsItem = generateEnumItems(MatchModel.ShootSpots);\r\n  const EndGameOnStageItem = generateEnumItems(MatchModel.EndGameOnStage);\r\n  const EndGameHarmonyItem = generateEnumItems(MatchModel.EndGameHarmony);\r\n  const TrapTypeItem = generateEnumItems(MatchModel.Trap);\r\n  const RankingPointsItem = generateEnumItems(MatchModel.RankingPoints);\r\n  const DefenseLevelItem = generateEnumItems(MatchModel.DefenseLevel);\r\n  const TippinessItem = generateEnumItems(MatchModel.Tippiness);\r\n  const SpeedItem = generateEnumItems(MatchModel.Speed);\r\n  const AwareTypeItem = generateEnumItems(MatchModel.Awareness);\r\n  const EndGameTrapITem = generateEnumItems(MatchModel.TrapEndGame);\r\n  const InfoData = [\r\n    {\r\n      label: \"Scout Name\",\r\n      key: \"ScoutName\",\r\n      value: newMatchData.ScoutName,\r\n      type: \"text\",\r\n    },\r\n    {\r\n      label: \"Match Number\",\r\n      key: \"MatchNumber\",\r\n      value: newMatchData.MatchNumber.toString(),\r\n      type: \"number\",\r\n    },\r\n  ];\r\n\r\n  const AutoData = [\r\n    {\r\n      label: \"Starting Position\",\r\n      key: \"AutoStartingPosition\",\r\n      value: newMatchData.AutoStartingPosition,\r\n      type: \"dropdown\",\r\n      droptype: PositionTypeItem,\r\n    },\r\n    {\r\n      label: \"Auto Leave\",\r\n      key: \"AutoLeave\",\r\n      value: newMatchData.AutoLeave,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Amplifier\",\r\n      key: \"AutoAmp\",\r\n      value: newMatchData.AutoAmp,\r\n      type: \"counter\",\r\n    },\r\n    {\r\n      label: \"Speaker\",\r\n      key: \"AutoSpeaker\",\r\n      value: newMatchData.AutoSpeaker,\r\n      type: \"counter\",\r\n    },\r\n   \r\n    {\r\n      label: \"Extra Notes\",\r\n      key: \"AutoExtraNotes\", //TODO CUSTOM RADIO BUTTON\r\n      value: newMatchData.AutoExtraNotes,\r\n      type: \"dropdown\",\r\n      droptype: extraNotesItem,\r\n    },\r\n    {\r\n      label: \"Dropped Game Pieces\",\r\n      key: \"AutoDropped\",\r\n      value: newMatchData.AutoDropped,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"A-StopPressed?\",\r\n      key: \"AutoAStopPressed\",\r\n      value: newMatchData.AutoAStopPressed,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Incapacitated in auto?\",\r\n      key: \"AutoIncapacitated\",\r\n      value: newMatchData.AutoIncapacitated,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Fell in auto?\",\r\n      key: \"AutoRobotFalls\",\r\n      value: newMatchData.AutoRobotFalls,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Robot Did Not Play\",\r\n      key: \"AutoRobotDidNotPlay\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"boolean\",\r\n    },\r\n  ];\r\n\r\n  const TeleopData = [\r\n    {\r\n      label: \"Speaker Amplified\",\r\n      key: \"TeleopSpeakerAmplified\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Teleop Speaker\",\r\n      key: \"TeleopSpeaker\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Teleop Amplifier\",\r\n      key: \"TeleopAmplifier\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Teleop Cycle Time\",\r\n      key: \"TeleopCycleTime\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"timer\",\r\n    },\r\n    {\r\n      label: \"Teleop Dropped\",\r\n      key: \"TeleopDropped\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Teleop Trap\",\r\n      key: \"TeleopTrap\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"dropdown\",\r\n      droptype: TrapTypeItem,\r\n    },\r\n    {\r\n      label: \"Fell in teleop?\",\r\n      key: \"TeleopFell\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Incapacitated in Teleop\",\r\n      key: \"TeleopIncapacitated\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Teleop Game Piece Stuck\",\r\n      key: \"TeleopGamePieceStuck\",\r\n      value: newMatchData.TeleopGamePieceStuck,\r\n      type: \"counter\",\r\n    },\r\n    {\r\n      label: \"Teleop Shoots From\",\r\n      key: \"TeleopShootsFrom\",\r\n      value: newMatchData.AutoRobotDidNotPlay,\r\n      type: \"dropdown\",\r\n      droptype: ShootSpotsItem,\r\n    },\r\n    {\r\n      label: \"Teleop Under Stage\",\r\n      key: \"TeleopUnderStage\",\r\n      value: newMatchData.TeleopUnderStage,\r\n      type: \"boolean\",\r\n    },\r\n  ];\r\n\r\n  const EndGameData = [\r\n    {\r\n      label: \"End Game On Stage\",\r\n      key: \"EndGameOnStage\",\r\n      value: newMatchData.EndGameOnStage,\r\n      type: \"dropdown\",\r\n      droptype: EndGameOnStageItem,\r\n    },\r\n    {\r\n      label: \"End Game Harmony\", //TODO not put in verif\r\n      key: \"EndGameHarmony\",\r\n      value: newMatchData.EndGameHarmony,\r\n      type: \"dropdown\",\r\n      droptype: EndGameHarmonyItem,\r\n    },\r\n    {\r\n      label: \"End Game Trap\", //TODO not put in verif\r\n      key: \"EndGameTrap\",\r\n      value: newMatchData.EndGameTrap,\r\n      type: \"dropdown\",\r\n      droptype: EndGameTrapITem,\r\n    },\r\n    {\r\n      label: \"End Game Robot Fell\",\r\n      key: \"EndGameRobotFell\",\r\n      value: newMatchData.EndGameRobotFell,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"End Game Robot Incapacitated\",\r\n      key: \"EndGameRobotIncapacitated\",\r\n      value: newMatchData.EndGameRobotIncapacitated,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"End Game Spotlit\",\r\n      key: \"EndGameSpotLighted\",\r\n      value: newMatchData.EndGameSpotLighted,\r\n      type: \"boolean\",\r\n    },\r\n  ];\r\n\r\n  const PerformanceData = [\r\n    {\r\n      label: \"Total Points Alliance\",\r\n      key: \"AllianceTotalPoints\",\r\n      value: newMatchData.AllianceTotalPoints,\r\n      type: \"number\",\r\n    },\r\n    {\r\n      label: \"Alliance Game Status\",\r\n      key: \"AllianceRankingPoints\",\r\n      value: newMatchData.AllianceRankingPoints,\r\n      type: \"dropdown\",\r\n      droptype: RankingPointsItem,\r\n    },\r\n    {\r\n      label: \"Alliance Melody\",\r\n      key: \"AllianceMelody\",\r\n      value: newMatchData.AllianceMelody,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Alliance Coopertition\",\r\n      key: \"AllianceCoopertition\",\r\n      value: newMatchData.AllianceCoopertition,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Alliance Ensemble\",\r\n      key: \"AllianceEnsemble\",\r\n      value: newMatchData.AllianceEnsemble,\r\n      type: \"boolean\",\r\n    },\r\n    {\r\n      label: \"Plays Defense?\",\r\n      key: \"PlaysDefense\",\r\n      value: newMatchData.PlaysDefense,\r\n      type: \"dropdown\",\r\n      droptype: DefenseLevelItem,\r\n    },\r\n    {\r\n      label: \"Is robot tippy?\",\r\n      key: \"RobotTippy\",\r\n      value: newMatchData.RobotTippy,\r\n      type: \"dropdown\",\r\n      droptype: TippinessItem,\r\n    },\r\n    {\r\n      label: \"Is robot fast?\",\r\n      key: \"RobotSpeed\",\r\n      value: newMatchData.RobotSpeed,\r\n      type: \"dropdown\",\r\n      droptype: SpeedItem,\r\n    },\r\n    {\r\n      label: \"Field Awareness\",\r\n      key: \"FieldAwareness\",\r\n      value: newMatchData.FieldAwareness,\r\n      type: \"dropdown\",\r\n      droptype: AwareTypeItem,\r\n    },\r\n    {\r\n      label: \"Comment\",\r\n      key: \"Comment\",\r\n      value: newMatchData.TotalPointsAlliance,\r\n      type: \"text\",\r\n    },\r\n  ];\r\n\r\n  const buttonTextStyle = {\r\n    color: \"#686868\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    Keyboard.dismiss();\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }} onStartShouldSetResponderCapture={handleScroll}>\r\n      <ProgressSteps\r\n        completedProgressBarColor=\"#1E1E1E\"\r\n        activeStepIconBorderColor=\"#1E1E1E\"\r\n        completedStepIconColor=\"#1E1E1E\"\r\n        activeStepIconColor=\"#F6EB14\"\r\n        activeLabelColor=\"#1E1E1E\"\r\n        completedCheckColor=\"#F6EB14\"\r\n      >\r\n        <ProgressStep\r\n          label=\"Info\"\r\n          nextBtnTextStyle={buttonTextStyle}\r\n          previousBtnTextStyle={buttonTextStyle}\r\n        >\r\n          <View>{content({ data: InfoData })}</View>\r\n        </ProgressStep>\r\n        <ProgressStep\r\n          label=\"Auto\"\r\n          nextBtnTextStyle={buttonTextStyle}\r\n          previousBtnTextStyle={buttonTextStyle}\r\n        >\r\n          <View style={{}}>\r\n            <View>{content({ data: AutoData })}</View>\r\n          </View>\r\n        </ProgressStep>\r\n        <ProgressStep\r\n          label=\"Teleop\"\r\n          nextBtnTextStyle={buttonTextStyle}\r\n          previousBtnTextStyle={buttonTextStyle}\r\n        >\r\n          <View style={{}}>\r\n            <View>{content({ data: TeleopData })}</View>\r\n          </View>\r\n        </ProgressStep>\r\n        <ProgressStep\r\n          label=\"EndGame\"\r\n          scrollViewProps={this.defaultScrollViewProps}\r\n          nextBtnTextStyle={buttonTextStyle}\r\n          previousBtnTextStyle={buttonTextStyle}\r\n        >\r\n          <View style={{}}>\r\n            <View>{content({ data: EndGameData })}</View>\r\n          </View>\r\n        </ProgressStep>\r\n        <ProgressStep\r\n          label=\"Results\"\r\n          onSubmit={handleSaveMatchData}\r\n          nextBtnTextStyle={buttonTextStyle}\r\n          previousBtnTextStyle={buttonTextStyle}\r\n        >\r\n          <View style={{}}>\r\n            <View>{content({ data: PerformanceData })}</View>\r\n          </View>\r\n        </ProgressStep>\r\n      </ProgressSteps>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  headerContainer: {\r\n    alignItems: \"center\",\r\n    marginVertical: 10,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  saveButton: {\r\n    backgroundColor: \"#F6EB14\",\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n  },\r\n  label: {\r\n    width: 100,\r\n    marginRight: 10,\r\n  },\r\n});\r\nexport default Matches;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}