{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { PlatformColor } from \"react-native-web/dist/index\";\nimport useTheme from \"./useTheme\";\nvar DialogDescription = function DialogDescription(props) {\n  var style = props.style,\n    children = props.children,\n    nodeProps = __rest(props, [\"style\", \"children\"]);\n  var _useTheme = useTheme(buildStyles),\n    styles = _useTheme.styles;\n  return React.createElement(Text, Object.assign({\n    style: [styles.text, style]\n  }, nodeProps), children);\n};\nDialogDescription.displayName = \"DialogDescription\";\nvar buildStyles = function buildStyles(isDark) {\n  return StyleSheet.create({\n    text: Platform.select({\n      ios: {\n        textAlign: \"center\",\n        color: PlatformColor(\"label\"),\n        fontSize: 13,\n        marginTop: 4\n      },\n      android: {\n        color: PlatformColor(`@android:color/${isDark ? \"secondary_text_dark\" : \"secondary_text_light\"}`),\n        fontSize: 16,\n        marginTop: 10\n      },\n      web: {\n        color: \"#33383D\",\n        fontSize: 16,\n        marginTop: 10\n      },\n      default: {}\n    })\n  });\n};\nexport default DialogDescription;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Platform","StyleSheet","Text","PlatformColor","useTheme","DialogDescription","props","style","children","nodeProps","_useTheme","buildStyles","styles","createElement","assign","text","displayName","isDark","create","select","ios","textAlign","color","fontSize","marginTop","android","web","default"],"sources":["C:/Users/Noril/Documents/TechScout/node_modules/react-native-dialog/lib/Description.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { Platform, StyleSheet, Text, PlatformColor, } from \"react-native\";\nimport useTheme from \"./useTheme\";\nconst DialogDescription = (props) => {\n    const { style, children } = props, nodeProps = __rest(props, [\"style\", \"children\"]);\n    const { styles } = useTheme(buildStyles);\n    return (React.createElement(Text, Object.assign({ style: [styles.text, style] }, nodeProps), children));\n};\nDialogDescription.displayName = \"DialogDescription\";\nconst buildStyles = (isDark) => StyleSheet.create({\n    text: Platform.select({\n        ios: {\n            textAlign: \"center\",\n            color: PlatformColor(\"label\"),\n            fontSize: 13,\n            marginTop: 4,\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"secondary_text_dark\" : \"secondary_text_light\"}`),\n            fontSize: 16,\n            marginTop: 10,\n        },\n        web: {\n            color: \"#33383D\",\n            fontSize: 16,\n            marginTop: 10,\n        },\n        default: {},\n    }),\n});\nexport default DialogDescription;\n"],"mappings":"AAAA,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAC/ED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACf,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAC/D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IACpE,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAC1ER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACzB;EACJ,OAAOR,CAAC;AACZ,CAAC;AACD,OAAO,KAAKW,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,SACMC,aAAa;AAClD,OAAOC,QAAQ;AACf,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,KAAK,EAAK;EACjC,IAAQC,KAAK,GAAeD,KAAK,CAAzBC,KAAK;IAAEC,QAAQ,GAAKF,KAAK,CAAlBE,QAAQ;IAAYC,SAAS,GAAGxB,MAAM,CAACqB,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;EACnF,IAAAI,SAAA,GAAmBN,QAAQ,CAACO,WAAW,CAAC;IAAhCC,MAAM,GAAAF,SAAA,CAANE,MAAM;EACd,OAAQb,KAAK,CAACc,aAAa,CAACX,IAAI,EAAEZ,MAAM,CAACwB,MAAM,CAAC;IAAEP,KAAK,EAAE,CAACK,MAAM,CAACG,IAAI,EAAER,KAAK;EAAE,CAAC,EAAEE,SAAS,CAAC,EAAED,QAAQ,CAAC;AAC1G,CAAC;AACDH,iBAAiB,CAACW,WAAW,GAAG,mBAAmB;AACnD,IAAML,WAAW,GAAG,SAAdA,WAAWA,CAAIM,MAAM;EAAA,OAAKhB,UAAU,CAACiB,MAAM,CAAC;IAC9CH,IAAI,EAAEf,QAAQ,CAACmB,MAAM,CAAC;MAClBC,GAAG,EAAE;QACDC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAEnB,aAAa,CAAC,OAAO,CAAC;QAC7BoB,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE;MACf,CAAC;MACDC,OAAO,EAAE;QACLH,KAAK,EAAEnB,aAAa,CAAE,kBAAiBc,MAAM,GAAG,qBAAqB,GAAG,sBAAuB,EAAC,CAAC;QACjGM,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE;MACf,CAAC;MACDE,GAAG,EAAE;QACDJ,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE;MACf,CAAC;MACDG,OAAO,EAAE,CAAC;IACd,CAAC;EACL,CAAC,CAAC;AAAA;AACF,eAAetB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}