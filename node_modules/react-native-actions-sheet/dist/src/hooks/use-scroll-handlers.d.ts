import React from 'react';
import { NativeScrollEvent, NativeSyntheticEvent } from 'react-native';
import { ContentSize, DraggableNodeOptions, LayoutRect } from '../context';
export declare const ScrollState: {
    END: number;
};
export declare function resolveScrollRef(ref: any): any;
export declare function useDraggable<T>(options: DraggableNodeOptions): {
    nodeRef: React.RefObject<T>;
    offset: React.MutableRefObject<{
        x: number;
        y: number;
    }>;
    draggableNodes: import("../context").DraggableNodes;
    layout: React.MutableRefObject<LayoutRect>;
    contentSize: React.MutableRefObject<ContentSize>;
    gestureContext: {
        ref: React.RefObject<unknown>;
        eventManager: import("../eventmanager").default;
    };
};
export declare function useScrollHandlers<T>(options: DraggableNodeOptions): {
    ref: React.RefObject<T>;
    simultaneousHandlers: React.RefObject<unknown>;
    onScroll: (event: NativeSyntheticEvent<NativeScrollEvent>) => void;
    scrollEventThrottle: number;
    onContentSizeChange: (w: number, h: number) => void;
    onLayout: () => void;
};
//# sourceMappingURL=use-scroll-handlers.d.ts.map